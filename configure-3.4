#!/bin/bash
# Script generated by dpgitconfigure on Apr 26 2021
#
#   Configure script for Linux, Mac OS X and Unix
#
# copyright (C) 2020 Marc Wathelet. All rights reserved.
#
#  This script is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#

# Useful functions
absolutePath()
{
  PATH=$1
  if [ "${PATH:0:1}" = "/" ]; then
    echo $PATH
  else
    ABS_PATH=$PWD
    while [ "${PATH:0:3}" = "../" ]; do
      ABS_PATH=${ABS_PATH%/[^/]*}
      PATH=${PATH:3}
    done
    echo $ABS_PATH/$PATH
  fi
}

# Arguments: destination directory, file
# New file must be generated in TEMP_DIR
function replaceFile()
{
  if [ -e $1/$2 ] && diff $1/$2 $TEMP_DIR/$2 > /dev/null; then
    rm $TEMP_DIR/$2
  else
    mv $TEMP_DIR/$2 $1
  fi
}

cleanexit()
{
  rm -rf $TEMP_DIR
  if [ $# = 1 ]; then
    if [ $1 -ne 0 ]; then
      rm -f $BUILD_DIR/geopsypack.pro
      rm -f $BUILD_DIR/Makefile*
      echo "Error while configuring geopsypack. Check above messages."
      echo "If you want to contact support, send a copy of the whole output."
    fi
    exit $1
  else
    echo
    echo "Aborting..." 1>&2
    exit 2
  fi
}

trap cleanexit INT QUIT
TEMP_DIR=$(mktemp -d /tmp/configure_XXXXXXXXX)

# Platform options
case "$(uname)" in
  Linux) PLATFORM=LINUX ;;
  SunOS) PLATFORM=LINUX ;;
  Darwin) PLATFORM=MAC ;;
  MINGW*) PLATFORM=MINGW ;;
  *)
    echo "Unknown platform $(uname)"
    cleanexit 2
  ;;
esac
# Current shell
if [ "$PLATFORM" = "MINGW" ]; then
  SHELL=sh
else
  SHELL=bash
fi
# Default options
LICENSE_ACCEPTED="no"
SKIP_QT_CHECK="no"
COMMANDLINE=""
SOURCE_DIR=$(cd $(dirname $0) && pwd)
BUILD_DIR=$SOURCE_DIR
while [ "$1" ]; do
  case "$1" in
    "-prefix" | "--prefix" | \
    "-bindir" | "--bindir" | \
    "-libdir" | "--libdir" | \
    "-incdir" | "--incdir" | \
    "-sharedir" | "--sharedir" | \
    "-dest-prefix" | "--dest-prefix" | \
    "-I" | \
    "-L" | \
    "-qt-bin-path" | "--qt-bin-path")
      COMMANDLINE="$COMMANDLINE $1"
      shift
      COMMANDLINE="$COMMANDLINE \"$(absolutePath $1)\""
    ;;
    "-D" | \
    "-cflags" | "--cflags" | \
    "-march" | "--march")
      COMMANDLINE="$COMMANDLINE $1"
      shift
      COMMANDLINE="$COMMANDLINE \"$1\""
    ;;
    "-shared" | "--shared" | \
    "-static" | "--static" | \
    "-no-pch" | "--no-pch" | \
    "-profile" | "--profile" | \
    "-win32" | "--win32" | \
    "-win64" | "--win64" | \
    "-no-svg" | "--no-svg" | \
    "-sse3" | "--sse3" | \
    "-skip-qt-translations" | "--skip-qt-translations")
      COMMANDLINE="$COMMANDLINE $1"
    ;;
    "-builddir" | "--builddir")
      COMMANDLINE="$COMMANDLINE $1"
      shift
      BUILD_DIR="$(absolutePath $1)"
      COMMANDLINE="$COMMANDLINE \"$BUILD_DIR\""
    ;;
    "-rpath" | "--rpath")
      if [ "${2:0:1}" = "-" ]; then
        COMMANDLINE="$COMMANDLINE -rpath"
      else
        shift
        COMMANDLINE="$COMMANDLINE -rpath \"$1\""
      fi
    ;;
    "-accept-license" | "--accept-license")
      LICENSE_ACCEPTED="yes"
      COMMANDLINE="$COMMANDLINE $1"
    ;;
    "-skip-qt-check" | "--skip-qt-check")
      SKIP_QT_CHECK="yes"
      COMMANDLINE="$COMMANDLINE $1"
    ;;
    "-h" | "-help" | "--help")
      echo
      echo "Usage: ./configure [options]"
      echo
      echo "Options:"
      echo
      echo " -qt-bin-path <DIR>  Use Qt in DIR instead of qt in PATH"
      echo " -accept-license     Skip interactive license acceptance"
      echo " -no-pch             Do not use precompiled headers (slower compilation)"
      echo
      echo "Installation paths:"
      echo
      echo " -prefix <DIR>       Base directory for installation"
      echo "                       (default /usr/local/Geopsy.org)"
      echo " -bindir <DIR>       Executables will be installed to dir"
      echo "                       (default PREFIX/bin)"
      echo " -libdir <DIR>       Libraries will be installed to dir"
      echo "                       (default PREFIX/lib)"
      echo " -incdir <DIR>       Headers will be installed to dir"
      echo "                       (default PREFIX/include)"
      echo " -sharedir <DIR>     Shared files and translations will be installed"
      echo "                     to dir (default PREFIX/share)"
      echo " -builddir <DIR>     Building in DIR instead of in source dir"
      echo
      echo "Configuration:"
      echo
      echo " -shared             Create and use shared libraries"
      echo " -static             Create and use static libraries"
      echo
      echo " -D <MACRO>          Defines MACRO"
      echo
      echo " -dest-prefix <DIR>  Destination prefix for all binaries"
      echo "                       (default working directory)"
      echo " -rpath <DIR>        Add DIR to library rutime search path"
      echo "                       (default PREFIX/lib, reset to null without DIR)"
      echo " -skip-qt-check      Do not check current Qt version"
      echo " -profile            Turn profiling on, add gcc option '-pg'"
      echo "                       (for development under Linux only)"
      echo " -win32              Turn on cross compilation with i686-mingw32"
      echo "                       (under Linux only)"
      echo " -win64              Turn on cross compilation with x86_64-mingw32"
      echo "                       (under Linux only)"
      echo " -no-svg             Do not compile support for Qt svg"
      echo " -cflags <FLAG>      Add FLAG to the list of compilation flags"
      echo " -sse3               Compile with SSE3 support"
      echo " -march <ARCH>       Specify the name of the target architecture"
      echo "                       Use ARCH=native for auto detection of the CPU's architecture"
      echo "                       Useful link: https://wiki.gentoo.org/wiki/Safe_CFLAGS"
      echo "                       Your architecture is:"
      grep -m1 -A3 "vendor_id" /proc/cpuinfo | awk '{printf("                       ");print}'
      echo
      echo
      echo "Third party libraries:"
      echo
      echo " -I dir              Add dir to the list of directories to be"
      echo "                     searched for headers"
      echo " -L dir              Add dir to the list of directories to be"
      echo "                     searched for libraries"
      echo
      cleanexit 0
    ;;
    *)
      echo "Bad option $1, see './configure -h' for help"
      cleanexit 2
    ;;
  esac
  shift
done

# Ensure that BUILD_DIR exists
test -d $BUILD_DIR || mkdir -p $BUILD_DIR

#Check that Qt is correctly installed
if [ "$SKIP_QT_CHECK" = "no" ]; then
  if qmake -v > /dev/null 2>&1; then
    QT_VERSION=$(qmake -v | awk '{if(NR==2) print $4}')
    QT_VERSION_NUM=$(echo $QT_VERSION | awk 'BEGIN{FS="."}{print $1*1000000+$2*1000+$3}')
    if [ "$QT_VERSION_NUM" -lt "5014002" ]; then
      echo "*** ERROR *** : your Qt version is $QT_VERSION."
      echo "                At least version 5.14.2 is recommended."
      echo "                If you want to skip this version check,"
      echo "                add option -skip-qt-check."
      cleanexit 2
    fi
  else
    echo "*** ERROR *** : qmake command is not available."
    echo "                Either Qt is not correctly installed"
    echo "                or PATH does not point to Qt binaries."
    cleanexit 2
  fi
fi
# Show license if Makefile does not exist
if [ ! -e $BUILD_DIR/configure.cache ] && [ "$LICENSE_ACCEPTED" = "no" ]; then
  echo
  echo "geopsypack contains items licensed to you under"
  if [ "$(ls LICENSE.* | wc -l)" -eq 1 ]; then
    echo "the terms of this license:"
    THIS_LICENCE="this license"
  else
    echo "the terms of all these licenses:"
    THIS_LICENCE="these licenses"
  fi
  echo
  for l in $(ls LICENSE.*); do
    echo "   $l"
  done
  echo
  LICENSE_ACCEPT=""
  while [ "$LICENSE_ACCEPT" != "no" ] && [ "$LICENSE_ACCEPT" != "yes" ]; do
    echo "Type 'view' to view ${THIS_LICENSE}."
    echo "Type 'yes' to accept ${THIS_LICENSE}."
    echo "Type 'no' to decline ${THIS_LICENSE}."
    echo
    echo -n "Do you accept ${THIS_LICENSE}? "
    read LICENSE_ACCEPT
    if [ "$LICENSE_ACCEPT" = "view" ]; then
      echo
      echo "###########################################################"
      echo
      echo "Type SPACE BAR or RETURN to move down, 'q' for next license"
      echo
      echo "###########################################################"
      echo
      sleep 5
      for l in $(ls LICENSE.*); do
        less $l
      done
    fi
  done
  if [ "$LICENSE_ACCEPT" = "no" ]; then
    echo "You are not allowed to use this package."
    cleanexit 2
  fi
fi
echo

# If configure called from ./configure.cache, do not overwrite
if [ "$SAVE_CONFIGURE_OPTIONS_IN_CACHE" != "no" ]; then
  (
  cat << END
export SAVE_CONFIGURE_OPTIONS_IN_CACHE="no"
cd $SOURCE_DIR
echo "$SHELL ./configure ${COMMANDLINE//\"/\\\"}"
$SHELL ./configure $COMMANDLINE
END
  ) > $BUILD_DIR/configure.cache
  chmod a+x $BUILD_DIR/configure.cache
fi

# Check for Ubuntu Unity
# Comment this section if you are not running Ubuntu Unity with a recent release > 10.04
if which lsb_release > /dev/null 2>&1; then
  if [ $(lsb_release --id | awk 'BEGIN{FS=":"}{gsub("^[ \t]*", "", $2);print tolower($2)}') = "ubuntu" ]; then
    if [ $(lsb_release --release | awk 'BEGIN{FS=":"}{gsub("^[ \t]*", "", $2);print $2*100}') -gt 1004 ]; then
      COMMANDLINE="$COMMANDLINE -D UBUNTU_UNITY"
    fi
  fi
fi

# Create main pro file
(
echo "TEMPLATE=subdirs"
echo "CONFIG += ordered"
echo "SUBDIRS=\\"
) > $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/mseed/src || mkdir -p $BUILD_DIR/mseed/src
cat <<ENDVERSION > $TEMP_DIR/mseedVersion.h
#ifndef MSEED_VERSION
#define MSEED_VERSION "2.5.1"
#define MSEED_VERSION_TIME "202006291322"
#define MSEED_VERSION_TYPE "3.4"
#define MSEED_AUTHORS ""
#define MSEED_DISTRIBUTION "3.4.0-preview"
#define MSEED_GIT_COMMIT "9f2fc0009edf4172988e3e409d3f5d57064a8d4e"
#endif // MSEED_VERSION
ENDVERSION
replaceFile $BUILD_DIR/mseed/src mseedVersion.h
echo "Configure mseed"
cd "mseed"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir mseed -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          mseed \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/slink/src || mkdir -p $BUILD_DIR/slink/src
cat <<ENDVERSION > $TEMP_DIR/slinkVersion.h
#ifndef SLINK_VERSION
#define SLINK_VERSION "1.6.0"
#define SLINK_VERSION_TIME "202006291322"
#define SLINK_VERSION_TYPE "3.4"
#define SLINK_AUTHORS ""
#define SLINK_DISTRIBUTION "3.4.0-preview"
#define SLINK_GIT_COMMIT "b3f19904107b0baa8473df1f543e22bb57f1fa6e"
#endif // SLINK_VERSION
ENDVERSION
replaceFile $BUILD_DIR/slink/src slinkVersion.h
echo "Configure slink"
cd "slink"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir slink -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          slink \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/QGpCoreTools/src || mkdir -p $BUILD_DIR/QGpCoreTools/src
cat <<ENDVERSION > $TEMP_DIR/QGpCoreToolsVersion.h
#ifndef QGPCORETOOLS_VERSION
#define QGPCORETOOLS_VERSION "2.3.2"
#define QGPCORETOOLS_VERSION_TIME "202012041354"
#define QGPCORETOOLS_VERSION_TYPE "3.4"
#define QGPCORETOOLS_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define QGPCORETOOLS_DISTRIBUTION "3.4.0-preview"
#define QGPCORETOOLS_GIT_COMMIT "0f6303cc677033de37d217505634f303fad2a55e"
#endif // QGPCORETOOLS_VERSION
ENDVERSION
replaceFile $BUILD_DIR/QGpCoreTools/src QGpCoreToolsVersion.h
echo "Configure QGpCoreTools"
cd "QGpCoreTools"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir QGpCoreTools -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          QGpCoreTools \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/QGpGuiTools/src || mkdir -p $BUILD_DIR/QGpGuiTools/src
cat <<ENDVERSION > $TEMP_DIR/QGpGuiToolsVersion.h
#ifndef QGPGUITOOLS_VERSION
#define QGPGUITOOLS_VERSION "2.3.0"
#define QGPGUITOOLS_VERSION_TIME "202006291322"
#define QGPGUITOOLS_VERSION_TYPE "3.4"
#define QGPGUITOOLS_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define QGPGUITOOLS_DISTRIBUTION "3.4.0-preview"
#define QGPGUITOOLS_GIT_COMMIT "ca1e6921d1a7861e7d50feec837017e2afdd030c"
#endif // QGPGUITOOLS_VERSION
ENDVERSION
replaceFile $BUILD_DIR/QGpGuiTools/src QGpGuiToolsVersion.h
echo "Configure QGpGuiTools"
cd "QGpGuiTools"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir QGpGuiTools -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          QGpGuiTools \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/QGpCoreMath/src || mkdir -p $BUILD_DIR/QGpCoreMath/src
cat <<ENDVERSION > $TEMP_DIR/QGpCoreMathVersion.h
#ifndef QGPCOREMATH_VERSION
#define QGPCOREMATH_VERSION "1.3.0"
#define QGPCOREMATH_VERSION_TIME "202006291322"
#define QGPCOREMATH_VERSION_TYPE "3.4"
#define QGPCOREMATH_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define QGPCOREMATH_DISTRIBUTION "3.4.0-preview"
#define QGPCOREMATH_GIT_COMMIT "fc9c30e5551a68aa8bd416f25fc6489d1e35fbf2"
#endif // QGPCOREMATH_VERSION
ENDVERSION
replaceFile $BUILD_DIR/QGpCoreMath/src QGpCoreMathVersion.h
echo "Configure QGpCoreMath"
cd "QGpCoreMath"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir QGpCoreMath -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          QGpCoreMath \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/SciFigs/src || mkdir -p $BUILD_DIR/SciFigs/src
cat <<ENDVERSION > $TEMP_DIR/SciFigsVersion.h
#ifndef SCIFIGS_VERSION
#define SCIFIGS_VERSION "3.2.0"
#define SCIFIGS_VERSION_TIME "202006291323"
#define SCIFIGS_VERSION_TYPE "3.4"
#define SCIFIGS_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define SCIFIGS_DISTRIBUTION "3.4.0-preview"
#define SCIFIGS_GIT_COMMIT "d3252436289d071d3409a84d3154ebf3fb0fcf3e"
#endif // SCIFIGS_VERSION
ENDVERSION
replaceFile $BUILD_DIR/SciFigs/src SciFigsVersion.h
echo "Configure SciFigs"
cd "SciFigs"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir SciFigs -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          SciFigs \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/QGpGuiMath/src || mkdir -p $BUILD_DIR/QGpGuiMath/src
cat <<ENDVERSION > $TEMP_DIR/QGpGuiMathVersion.h
#ifndef QGPGUIMATH_VERSION
#define QGPGUIMATH_VERSION "1.2.0"
#define QGPGUIMATH_VERSION_TIME "202006291324"
#define QGPGUIMATH_VERSION_TYPE "3.4"
#define QGPGUIMATH_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define QGPGUIMATH_DISTRIBUTION "3.4.0-preview"
#define QGPGUIMATH_GIT_COMMIT "693ef2e6b76511a18c179a157a1bd627f0306992"
#endif // QGPGUIMATH_VERSION
ENDVERSION
replaceFile $BUILD_DIR/QGpGuiMath/src QGpGuiMathVersion.h
echo "Configure QGpGuiMath"
cd "QGpGuiMath"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir QGpGuiMath -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          QGpGuiMath \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/figue/src || mkdir -p $BUILD_DIR/figue/src
cat <<ENDVERSION > $TEMP_DIR/figueVersion.h
#ifndef FIGUE_VERSION
#define FIGUE_VERSION "2.0.3"
#define FIGUE_VERSION_TIME "202006291345"
#define FIGUE_VERSION_TYPE "3.4"
#define FIGUE_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define FIGUE_DISTRIBUTION "3.4.0-preview"
#define FIGUE_GIT_COMMIT "112945344f7c0ae417deb117e3948b82eaa98eca"
#endif // FIGUE_VERSION
ENDVERSION
replaceFile $BUILD_DIR/figue/src figueVersion.h
echo "Configure figue"
cd "figue"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir figue -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          figue \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/QGpCoreWave/src || mkdir -p $BUILD_DIR/QGpCoreWave/src
cat <<ENDVERSION > $TEMP_DIR/QGpCoreWaveVersion.h
#ifndef QGPCOREWAVE_VERSION
#define QGPCOREWAVE_VERSION "2.1.0"
#define QGPCOREWAVE_VERSION_TIME "202006291324"
#define QGPCOREWAVE_VERSION_TYPE "3.4"
#define QGPCOREWAVE_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)\nPhil Cummins (RSES, Canberra, Australia)\nRoger Wisen (RAMBOLL, Copenhagen, Denmark)"
#define QGPCOREWAVE_DISTRIBUTION "3.4.0-preview"
#define QGPCOREWAVE_GIT_COMMIT "b8275c0bc2fe184ac3656628d4f512a615bd070f"
#endif // QGPCOREWAVE_VERSION
ENDVERSION
replaceFile $BUILD_DIR/QGpCoreWave/src QGpCoreWaveVersion.h
echo "Configure QGpCoreWave"
cd "QGpCoreWave"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir QGpCoreWave -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          QGpCoreWave \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/QGpGuiWave/src || mkdir -p $BUILD_DIR/QGpGuiWave/src
cat <<ENDVERSION > $TEMP_DIR/QGpGuiWaveVersion.h
#ifndef QGPGUIWAVE_VERSION
#define QGPGUIWAVE_VERSION "1.1.0"
#define QGPGUIWAVE_VERSION_TIME "202006291324"
#define QGPGUIWAVE_VERSION_TYPE "3.4"
#define QGPGUIWAVE_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)"
#define QGPGUIWAVE_DISTRIBUTION "3.4.0-preview"
#define QGPGUIWAVE_GIT_COMMIT "59d9571076331d01b14df33379d2001f495f16d4"
#endif // QGPGUIWAVE_VERSION
ENDVERSION
replaceFile $BUILD_DIR/QGpGuiWave/src QGpGuiWaveVersion.h
echo "Configure QGpGuiWave"
cd "QGpGuiWave"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir QGpGuiWave -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          QGpGuiWave \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/QGpCompatibility/src || mkdir -p $BUILD_DIR/QGpCompatibility/src
cat <<ENDVERSION > $TEMP_DIR/QGpCompatibilityVersion.h
#ifndef QGPCOMPATIBILITY_VERSION
#define QGPCOMPATIBILITY_VERSION "1.1.0"
#define QGPCOMPATIBILITY_VERSION_TIME "202006291324"
#define QGPCOMPATIBILITY_VERSION_TYPE "3.4"
#define QGPCOMPATIBILITY_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define QGPCOMPATIBILITY_DISTRIBUTION "3.4.0-preview"
#define QGPCOMPATIBILITY_GIT_COMMIT "d856b5888f7e599dbd354b2a4dea3d769e1b3d0c"
#endif // QGPCOMPATIBILITY_VERSION
ENDVERSION
replaceFile $BUILD_DIR/QGpCompatibility/src QGpCompatibilityVersion.h
echo "Configure QGpCompatibility"
cd "QGpCompatibility"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir QGpCompatibility -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          QGpCompatibility \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/GeopsyCore/src || mkdir -p $BUILD_DIR/GeopsyCore/src
cat <<ENDVERSION > $TEMP_DIR/GeopsyCoreVersion.h
#ifndef GEOPSYCORE_VERSION
#define GEOPSYCORE_VERSION "4.3.0"
#define GEOPSYCORE_VERSION_TIME "202006291324"
#define GEOPSYCORE_VERSION_TYPE "3.4"
#define GEOPSYCORE_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define GEOPSYCORE_DISTRIBUTION "3.4.0-preview"
#define GEOPSYCORE_GIT_COMMIT "ad938208ca86f619f86dd808b8698e6bcb9a53b7"
#endif // GEOPSYCORE_VERSION
ENDVERSION
replaceFile $BUILD_DIR/GeopsyCore/src GeopsyCoreVersion.h
echo "Configure GeopsyCore"
cd "GeopsyCore"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir GeopsyCore -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          GeopsyCore \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/GeopsyGui/src || mkdir -p $BUILD_DIR/GeopsyGui/src
cat <<ENDVERSION > $TEMP_DIR/GeopsyGuiVersion.h
#ifndef GEOPSYGUI_VERSION
#define GEOPSYGUI_VERSION "3.3.1"
#define GEOPSYGUI_VERSION_TIME "202007131308"
#define GEOPSYGUI_VERSION_TYPE "3.4"
#define GEOPSYGUI_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define GEOPSYGUI_DISTRIBUTION "3.4.0-preview"
#define GEOPSYGUI_GIT_COMMIT "af565d12931a27c97fa737dd03f14231294690f2"
#endif // GEOPSYGUI_VERSION
ENDVERSION
replaceFile $BUILD_DIR/GeopsyGui/src GeopsyGuiVersion.h
echo "Configure GeopsyGui"
cd "GeopsyGui"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir GeopsyGui -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          GeopsyGui \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/geopsyfigs/src || mkdir -p $BUILD_DIR/geopsyfigs/src
cat <<ENDVERSION > $TEMP_DIR/geopsyfigsVersion.h
#ifndef GEOPSYFIGS_VERSION
#define GEOPSYFIGS_VERSION "1.0.1"
#define GEOPSYFIGS_VERSION_TIME "202006291324"
#define GEOPSYFIGS_VERSION_TYPE "3.4"
#define GEOPSYFIGS_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GEOPSYFIGS_DISTRIBUTION "3.4.0-preview"
#define GEOPSYFIGS_GIT_COMMIT "5e951d8ca7cc7e963fc266941f5d91532a934671"
#endif // GEOPSYFIGS_VERSION
ENDVERSION
replaceFile $BUILD_DIR/geopsyfigs/src geopsyfigsVersion.h
echo "Configure geopsyfigs"
cd "geopsyfigs"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir geopsyfigs -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          geopsyfigs \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/GeopsySLink/src || mkdir -p $BUILD_DIR/GeopsySLink/src
cat <<ENDVERSION > $TEMP_DIR/GeopsySLinkVersion.h
#ifndef GEOPSYSLINK_VERSION
#define GEOPSYSLINK_VERSION "2.0.1"
#define GEOPSYSLINK_VERSION_TIME "202006291324"
#define GEOPSYSLINK_VERSION_TYPE "3.4"
#define GEOPSYSLINK_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GEOPSYSLINK_DISTRIBUTION "3.4.0-preview"
#define GEOPSYSLINK_GIT_COMMIT "3473d7399daeab0c731997f7081fc8e29ab51cc3"
#endif // GEOPSYSLINK_VERSION
ENDVERSION
replaceFile $BUILD_DIR/GeopsySLink/src GeopsySLinkVersion.h
echo "Configure GeopsySLink"
cd "GeopsySLink"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir GeopsySLink -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          GeopsySLink \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/GeopsySLinkGui/src || mkdir -p $BUILD_DIR/GeopsySLinkGui/src
cat <<ENDVERSION > $TEMP_DIR/GeopsySLinkGuiVersion.h
#ifndef GEOPSYSLINKGUI_VERSION
#define GEOPSYSLINKGUI_VERSION "2.0.2"
#define GEOPSYSLINKGUI_VERSION_TIME "202006291324"
#define GEOPSYSLINKGUI_VERSION_TYPE "3.4"
#define GEOPSYSLINKGUI_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GEOPSYSLINKGUI_DISTRIBUTION "3.4.0-preview"
#define GEOPSYSLINKGUI_GIT_COMMIT "95bacce21150a389f1e6ec2a2530cc536b02e6af"
#endif // GEOPSYSLINKGUI_VERSION
ENDVERSION
replaceFile $BUILD_DIR/GeopsySLinkGui/src GeopsySLinkGuiVersion.h
echo "Configure GeopsySLinkGui"
cd "GeopsySLinkGui"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir GeopsySLinkGui -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          GeopsySLinkGui \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/DinverCore/src || mkdir -p $BUILD_DIR/DinverCore/src
cat <<ENDVERSION > $TEMP_DIR/DinverCoreVersion.h
#ifndef DINVERCORE_VERSION
#define DINVERCORE_VERSION "1.2.1"
#define DINVERCORE_VERSION_TIME "202007131310"
#define DINVERCORE_VERSION_TYPE "3.4"
#define DINVERCORE_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define DINVERCORE_DISTRIBUTION "3.4.0-preview"
#define DINVERCORE_GIT_COMMIT "2adbdc98a03728c294128311f26427dd8d633b1a"
#endif // DINVERCORE_VERSION
ENDVERSION
replaceFile $BUILD_DIR/DinverCore/src DinverCoreVersion.h
echo "Configure DinverCore"
cd "DinverCore"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir DinverCore -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          DinverCore \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/DinverGui/src || mkdir -p $BUILD_DIR/DinverGui/src
cat <<ENDVERSION > $TEMP_DIR/DinverGuiVersion.h
#ifndef DINVERGUI_VERSION
#define DINVERGUI_VERSION "1.0.0"
#define DINVERGUI_VERSION_TIME "202006291324"
#define DINVERGUI_VERSION_TYPE "3.4"
#define DINVERGUI_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define DINVERGUI_DISTRIBUTION "3.4.0-preview"
#define DINVERGUI_GIT_COMMIT "03d74e9138e5c6dd7562302522897e7080a6c706"
#endif // DINVERGUI_VERSION
ENDVERSION
replaceFile $BUILD_DIR/DinverGui/src DinverGuiVersion.h
echo "Configure DinverGui"
cd "DinverGui"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir DinverGui -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          DinverGui \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/DinverDCCore/src || mkdir -p $BUILD_DIR/DinverDCCore/src
cat <<ENDVERSION > $TEMP_DIR/DinverDCCoreVersion.h
#ifndef DINVERDCCORE_VERSION
#define DINVERDCCORE_VERSION "2.1.0"
#define DINVERDCCORE_VERSION_TIME "202006291324"
#define DINVERDCCORE_VERSION_TYPE "3.4"
#define DINVERDCCORE_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define DINVERDCCORE_DISTRIBUTION "3.4.0-preview"
#define DINVERDCCORE_GIT_COMMIT "1dc30a8c3e072ad3928d05477045247eab57d0f8"
#endif // DINVERDCCORE_VERSION
ENDVERSION
replaceFile $BUILD_DIR/DinverDCCore/src DinverDCCoreVersion.h
echo "Configure DinverDCCore"
cd "DinverDCCore"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir DinverDCCore -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          DinverDCCore \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/DinverDCGui/src || mkdir -p $BUILD_DIR/DinverDCGui/src
cat <<ENDVERSION > $TEMP_DIR/DinverDCGuiVersion.h
#ifndef DINVERDCGUI_VERSION
#define DINVERDCGUI_VERSION "1.1.0"
#define DINVERDCGUI_VERSION_TIME "202006291324"
#define DINVERDCGUI_VERSION_TYPE "3.4"
#define DINVERDCGUI_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define DINVERDCGUI_DISTRIBUTION "3.4.0-preview"
#define DINVERDCGUI_GIT_COMMIT "3739029f389a1edec510884b26177f8a8d039a22"
#endif // DINVERDCGUI_VERSION
ENDVERSION
replaceFile $BUILD_DIR/DinverDCGui/src DinverDCGuiVersion.h
echo "Configure DinverDCGui"
cd "DinverDCGui"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir DinverDCGui -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          DinverDCGui \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/QGpCoreStat/src || mkdir -p $BUILD_DIR/QGpCoreStat/src
cat <<ENDVERSION > $TEMP_DIR/QGpCoreStatVersion.h
#ifndef QGPCORESTAT_VERSION
#define QGPCORESTAT_VERSION "1.1.0"
#define QGPCORESTAT_VERSION_TIME "202006291324"
#define QGPCORESTAT_VERSION_TYPE "3.4"
#define QGPCORESTAT_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)"
#define QGPCORESTAT_DISTRIBUTION "3.4.0-preview"
#define QGPCORESTAT_GIT_COMMIT "1c6908db6fb05799cebc78b11d19a6c6f135f2cb"
#endif // QGPCORESTAT_VERSION
ENDVERSION
replaceFile $BUILD_DIR/QGpCoreStat/src QGpCoreStatVersion.h
echo "Configure QGpCoreStat"
cd "QGpCoreStat"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir QGpCoreStat -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          QGpCoreStat \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/HVCore/src || mkdir -p $BUILD_DIR/HVCore/src
cat <<ENDVERSION > $TEMP_DIR/HVCoreVersion.h
#ifndef HVCORE_VERSION
#define HVCORE_VERSION "1.0.0"
#define HVCORE_VERSION_TIME "202006291324"
#define HVCORE_VERSION_TYPE "3.4"
#define HVCORE_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)"
#define HVCORE_DISTRIBUTION "3.4.0-preview"
#define HVCORE_GIT_COMMIT "985c8645a09e689c86ac6381c0a1695da26a2087"
#endif // HVCORE_VERSION
ENDVERSION
replaceFile $BUILD_DIR/HVCore/src HVCoreVersion.h
echo "Configure HVCore"
cd "HVCore"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir HVCore -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          HVCore \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/HVGui/src || mkdir -p $BUILD_DIR/HVGui/src
cat <<ENDVERSION > $TEMP_DIR/HVGuiVersion.h
#ifndef HVGUI_VERSION
#define HVGUI_VERSION "1.0.0"
#define HVGUI_VERSION_TIME "202006291324"
#define HVGUI_VERSION_TYPE "3.4"
#define HVGUI_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define HVGUI_DISTRIBUTION "3.4.0-preview"
#define HVGUI_GIT_COMMIT "9a03c18b0aaf96160aa895ba707e61c8d955b4fb"
#endif // HVGUI_VERSION
ENDVERSION
replaceFile $BUILD_DIR/HVGui/src HVGuiVersion.h
echo "Configure HVGui"
cd "HVGui"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir HVGui -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          HVGui \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/ArrayCore/src || mkdir -p $BUILD_DIR/ArrayCore/src
cat <<ENDVERSION > $TEMP_DIR/ArrayCoreVersion.h
#ifndef ARRAYCORE_VERSION
#define ARRAYCORE_VERSION "4.0.1"
#define ARRAYCORE_VERSION_TIME "202007131310"
#define ARRAYCORE_VERSION_TYPE "3.4"
#define ARRAYCORE_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define ARRAYCORE_DISTRIBUTION "3.4.0-preview"
#define ARRAYCORE_GIT_COMMIT "95283d27dd743e02a4ce5391b75f296216115474"
#endif // ARRAYCORE_VERSION
ENDVERSION
replaceFile $BUILD_DIR/ArrayCore/src ArrayCoreVersion.h
echo "Configure ArrayCore"
cd "ArrayCore"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir ArrayCore -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          ArrayCore \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/ArrayGui/src || mkdir -p $BUILD_DIR/ArrayGui/src
cat <<ENDVERSION > $TEMP_DIR/ArrayGuiVersion.h
#ifndef ARRAYGUI_VERSION
#define ARRAYGUI_VERSION "1.2.1"
#define ARRAYGUI_VERSION_TIME "202007131310"
#define ARRAYGUI_VERSION_TYPE "3.4"
#define ARRAYGUI_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define ARRAYGUI_DISTRIBUTION "3.4.0-preview"
#define ARRAYGUI_GIT_COMMIT "ee5b1e75e6ae89ad55c18d6f405c7a6980f9cc15"
#endif // ARRAYGUI_VERSION
ENDVERSION
replaceFile $BUILD_DIR/ArrayGui/src ArrayGuiVersion.h
echo "Configure ArrayGui"
cd "ArrayGui"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir ArrayGui -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          ArrayGui \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/geopsy-fk/src || mkdir -p $BUILD_DIR/geopsy-fk/src
cat <<ENDVERSION > $TEMP_DIR/geopsy-fkVersion.h
#ifndef GEOPSY_FK_VERSION
#define GEOPSY_FK_VERSION "1.0.1"
#define GEOPSY_FK_VERSION_TIME "202006291324"
#define GEOPSY_FK_VERSION_TYPE "3.4"
#define GEOPSY_FK_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)"
#define GEOPSY_FK_DISTRIBUTION "3.4.0-preview"
#define GEOPSY_FK_GIT_COMMIT "448bde42c922e0c60b8c5ad87a5cbb463b99dad5"
#endif // GEOPSY_FK_VERSION
ENDVERSION
replaceFile $BUILD_DIR/geopsy-fk/src geopsy-fkVersion.h
echo "Configure geopsy-fk"
cd "geopsy-fk"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir geopsy-fk -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          geopsy-fk \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/geopsy-spac/src || mkdir -p $BUILD_DIR/geopsy-spac/src
cat <<ENDVERSION > $TEMP_DIR/geopsy-spacVersion.h
#ifndef GEOPSY_SPAC_VERSION
#define GEOPSY_SPAC_VERSION "1.0.1"
#define GEOPSY_SPAC_VERSION_TIME "202006291324"
#define GEOPSY_SPAC_VERSION_TYPE "3.4"
#define GEOPSY_SPAC_AUTHORS ""
#define GEOPSY_SPAC_DISTRIBUTION "3.4.0-preview"
#define GEOPSY_SPAC_GIT_COMMIT "76eabbd6033f9e988c6e0866a209aba6da64fae9"
#endif // GEOPSY_SPAC_VERSION
ENDVERSION
replaceFile $BUILD_DIR/geopsy-spac/src geopsy-spacVersion.h
echo "Configure geopsy-spac"
cd "geopsy-spac"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir geopsy-spac -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          geopsy-spac \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/geopsy-hv/src || mkdir -p $BUILD_DIR/geopsy-hv/src
cat <<ENDVERSION > $TEMP_DIR/geopsy-hvVersion.h
#ifndef GEOPSY_HV_VERSION
#define GEOPSY_HV_VERSION "1.0.0"
#define GEOPSY_HV_VERSION_TIME "202006291324"
#define GEOPSY_HV_VERSION_TYPE "3.4"
#define GEOPSY_HV_AUTHORS ""
#define GEOPSY_HV_DISTRIBUTION "3.4.0-preview"
#define GEOPSY_HV_GIT_COMMIT "cef3724f76ef496b10646356c0ff4d3a0bfb99f1"
#endif // GEOPSY_HV_VERSION
ENDVERSION
replaceFile $BUILD_DIR/geopsy-hv/src geopsy-hvVersion.h
echo "Configure geopsy-hv"
cd "geopsy-hv"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir geopsy-hv -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          geopsy-hv \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/geopsy/src || mkdir -p $BUILD_DIR/geopsy/src
cat <<ENDVERSION > $TEMP_DIR/geopsyVersion.h
#ifndef GEOPSY_VERSION
#define GEOPSY_VERSION "3.3.0"
#define GEOPSY_VERSION_TIME "202006291324"
#define GEOPSY_VERSION_TYPE "3.4"
#define GEOPSY_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define GEOPSY_DISTRIBUTION "3.4.0-preview"
#define GEOPSY_GIT_COMMIT "5d1e11e3f030f18b95e55be88a76bcad0fb12676"
#endif // GEOPSY_VERSION
ENDVERSION
replaceFile $BUILD_DIR/geopsy/src geopsyVersion.h
echo "Configure geopsy"
cd "geopsy"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir geopsy -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          geopsy \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/vslarray/src || mkdir -p $BUILD_DIR/vslarray/src
cat <<ENDVERSION > $TEMP_DIR/vslarrayVersion.h
#ifndef VSLARRAY_VERSION
#define VSLARRAY_VERSION "1.0.1"
#define VSLARRAY_VERSION_TIME "202006291324"
#define VSLARRAY_VERSION_TYPE "3.4"
#define VSLARRAY_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define VSLARRAY_DISTRIBUTION "3.4.0-preview"
#define VSLARRAY_GIT_COMMIT "6b1a758398ee2f204172cd2f8c57704964d5acf2"
#endif // VSLARRAY_VERSION
ENDVERSION
replaceFile $BUILD_DIR/vslarray/src vslarrayVersion.h
echo "Configure vslarray"
cd "vslarray"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir vslarray -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          vslarray \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/dinver/src || mkdir -p $BUILD_DIR/dinver/src
cat <<ENDVERSION > $TEMP_DIR/dinverVersion.h
#ifndef DINVER_VERSION
#define DINVER_VERSION "1.1.0"
#define DINVER_VERSION_TIME "202006291324"
#define DINVER_VERSION_TYPE "3.4"
#define DINVER_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define DINVER_DISTRIBUTION "3.4.0-preview"
#define DINVER_GIT_COMMIT "e204b7223907ec6e0c1338e3e0b3de5306b784c3"
#endif // DINVER_VERSION
ENDVERSION
replaceFile $BUILD_DIR/dinver/src dinverVersion.h
echo "Configure dinver"
cd "dinver"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir dinver -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          dinver \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/WaranCore/src || mkdir -p $BUILD_DIR/WaranCore/src
cat <<ENDVERSION > $TEMP_DIR/WaranCoreVersion.h
#ifndef WARANCORE_VERSION
#define WARANCORE_VERSION "1.0.0"
#define WARANCORE_VERSION_TIME "202006291324"
#define WARANCORE_VERSION_TYPE "3.4"
#define WARANCORE_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define WARANCORE_DISTRIBUTION "3.4.0-preview"
#define WARANCORE_GIT_COMMIT "5a362c7a0e70f949c4256dc1fd110401a7fad1eb"
#endif // WARANCORE_VERSION
ENDVERSION
replaceFile $BUILD_DIR/WaranCore/src WaranCoreVersion.h
echo "Configure WaranCore"
cd "WaranCore"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir WaranCore -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          WaranCore \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/TapePositioningSystem/src || mkdir -p $BUILD_DIR/TapePositioningSystem/src
cat <<ENDVERSION > $TEMP_DIR/TapePositioningSystemVersion.h
#ifndef TAPEPOSITIONINGSYSTEM_VERSION
#define TAPEPOSITIONINGSYSTEM_VERSION "1.0.1"
#define TAPEPOSITIONINGSYSTEM_VERSION_TIME "202006291324"
#define TAPEPOSITIONINGSYSTEM_VERSION_TYPE "3.4"
#define TAPEPOSITIONINGSYSTEM_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)"
#define TAPEPOSITIONINGSYSTEM_DISTRIBUTION "3.4.0-preview"
#define TAPEPOSITIONINGSYSTEM_GIT_COMMIT "edfa623dfdc39e244382879f700c48f61a2aca6a"
#endif // TAPEPOSITIONINGSYSTEM_VERSION
ENDVERSION
replaceFile $BUILD_DIR/TapePositioningSystem/src TapePositioningSystemVersion.h
echo "Configure TapePositioningSystem"
cd "TapePositioningSystem"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir TapePositioningSystem -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          TapePositioningSystem \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/waran/src || mkdir -p $BUILD_DIR/waran/src
cat <<ENDVERSION > $TEMP_DIR/waranVersion.h
#ifndef WARAN_VERSION
#define WARAN_VERSION "1.1.1"
#define WARAN_VERSION_TIME "202006291324"
#define WARAN_VERSION_TYPE "3.4"
#define WARAN_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)"
#define WARAN_DISTRIBUTION "3.4.0-preview"
#define WARAN_GIT_COMMIT "6d187471abca18eba45a15b8a31fa0def971417d"
#endif // WARAN_VERSION
ENDVERSION
replaceFile $BUILD_DIR/waran/src waranVersion.h
echo "Configure waran"
cd "waran"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir waran -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          waran \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/warangps/src || mkdir -p $BUILD_DIR/warangps/src
cat <<ENDVERSION > $TEMP_DIR/warangpsVersion.h
#ifndef WARANGPS_VERSION
#define WARANGPS_VERSION "1.1.2"
#define WARANGPS_VERSION_TIME "202007131310"
#define WARANGPS_VERSION_TYPE "3.4"
#define WARANGPS_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define WARANGPS_DISTRIBUTION "3.4.0-preview"
#define WARANGPS_GIT_COMMIT "300092fc4bb33667f400fcb349d91ad5f1961808"
#endif // WARANGPS_VERSION
ENDVERSION
replaceFile $BUILD_DIR/warangps/src warangpsVersion.h
echo "Configure warangps"
cd "warangps"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir warangps -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          warangps \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/geopsyarray/src || mkdir -p $BUILD_DIR/geopsyarray/src
cat <<ENDVERSION > $TEMP_DIR/geopsyarrayVersion.h
#ifndef GEOPSYARRAY_VERSION
#define GEOPSYARRAY_VERSION "3.2.1"
#define GEOPSYARRAY_VERSION_TIME "202007131310"
#define GEOPSYARRAY_VERSION_TYPE "3.4"
#define GEOPSYARRAY_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define GEOPSYARRAY_DISTRIBUTION "3.4.0-preview"
#define GEOPSYARRAY_GIT_COMMIT "867eaeffb74e7c61461fa2267e9e207051450ee8"
#endif // GEOPSYARRAY_VERSION
ENDVERSION
replaceFile $BUILD_DIR/geopsyarray/src geopsyarrayVersion.h
echo "Configure geopsyarray"
cd "geopsyarray"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir geopsyarray -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          geopsyarray \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/geopsyhv/src || mkdir -p $BUILD_DIR/geopsyhv/src
cat <<ENDVERSION > $TEMP_DIR/geopsyhvVersion.h
#ifndef GEOPSYHV_VERSION
#define GEOPSYHV_VERSION "4.0.0"
#define GEOPSYHV_VERSION_TIME "202006291324"
#define GEOPSYHV_VERSION_TYPE "3.4"
#define GEOPSYHV_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define GEOPSYHV_DISTRIBUTION "3.4.0-preview"
#define GEOPSYHV_GIT_COMMIT "adda03f90ebe270d0f614d526e250110688009e8"
#endif // GEOPSYHV_VERSION
ENDVERSION
replaceFile $BUILD_DIR/geopsyhv/src geopsyhvVersion.h
echo "Configure geopsyhv"
cd "geopsyhv"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir geopsyhv -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          geopsyhv \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/geopsydamping/src || mkdir -p $BUILD_DIR/geopsydamping/src
cat <<ENDVERSION > $TEMP_DIR/geopsydampingVersion.h
#ifndef GEOPSYDAMPING_VERSION
#define GEOPSYDAMPING_VERSION "2.1.0"
#define GEOPSYDAMPING_VERSION_TIME "202006291324"
#define GEOPSYDAMPING_VERSION_TYPE "3.4"
#define GEOPSYDAMPING_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define GEOPSYDAMPING_DISTRIBUTION "3.4.0-preview"
#define GEOPSYDAMPING_GIT_COMMIT "b3624312679aeacb6cb9e6add48b66e246e9b738"
#endif // GEOPSYDAMPING_VERSION
ENDVERSION
replaceFile $BUILD_DIR/geopsydamping/src geopsydampingVersion.h
echo "Configure geopsydamping"
cd "geopsydamping"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir geopsydamping -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          geopsydamping \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/geopsytfa/src || mkdir -p $BUILD_DIR/geopsytfa/src
cat <<ENDVERSION > $TEMP_DIR/geopsytfaVersion.h
#ifndef GEOPSYTFA_VERSION
#define GEOPSYTFA_VERSION "2.1.0"
#define GEOPSYTFA_VERSION_TIME "202006291324"
#define GEOPSYTFA_VERSION_TYPE "3.4"
#define GEOPSYTFA_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GEOPSYTFA_DISTRIBUTION "3.4.0-preview"
#define GEOPSYTFA_GIT_COMMIT "f44e28ed14fc61979d190fb4bdb5b364f506b772"
#endif // GEOPSYTFA_VERSION
ENDVERSION
replaceFile $BUILD_DIR/geopsytfa/src geopsytfaVersion.h
echo "Configure geopsytfa"
cd "geopsytfa"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir geopsytfa -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          geopsytfa \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/geopsynr/src || mkdir -p $BUILD_DIR/geopsynr/src
cat <<ENDVERSION > $TEMP_DIR/geopsynrVersion.h
#ifndef GEOPSYNR_VERSION
#define GEOPSYNR_VERSION "1.1.0"
#define GEOPSYNR_VERSION_TIME "202006291326"
#define GEOPSYNR_VERSION_TYPE "3.4"
#define GEOPSYNR_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GEOPSYNR_DISTRIBUTION "3.4.0-preview"
#define GEOPSYNR_GIT_COMMIT "016a4f1dd32c21789d40bac43c42b1492eae0e1c"
#endif // GEOPSYNR_VERSION
ENDVERSION
replaceFile $BUILD_DIR/geopsynr/src geopsynrVersion.h
echo "Configure geopsynr"
cd "geopsynr"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir geopsynr -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          geopsynr \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/geopsyptmotion/src || mkdir -p $BUILD_DIR/geopsyptmotion/src
cat <<ENDVERSION > $TEMP_DIR/geopsyptmotionVersion.h
#ifndef GEOPSYPTMOTION_VERSION
#define GEOPSYPTMOTION_VERSION "2.0.1"
#define GEOPSYPTMOTION_VERSION_TIME "202006291326"
#define GEOPSYPTMOTION_VERSION_TYPE "3.4"
#define GEOPSYPTMOTION_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define GEOPSYPTMOTION_DISTRIBUTION "3.4.0-preview"
#define GEOPSYPTMOTION_GIT_COMMIT "98003be7754f3792c12481dea031fc0e2e242aff"
#endif // GEOPSYPTMOTION_VERSION
ENDVERSION
replaceFile $BUILD_DIR/geopsyptmotion/src geopsyptmotionVersion.h
echo "Configure geopsyptmotion"
cd "geopsyptmotion"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir geopsyptmotion -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          geopsyptmotion \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/geopsyrefra/src || mkdir -p $BUILD_DIR/geopsyrefra/src
cat <<ENDVERSION > $TEMP_DIR/geopsyrefraVersion.h
#ifndef GEOPSYREFRA_VERSION
#define GEOPSYREFRA_VERSION "2.0.1"
#define GEOPSYREFRA_VERSION_TIME "202006291326"
#define GEOPSYREFRA_VERSION_TYPE "3.4"
#define GEOPSYREFRA_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define GEOPSYREFRA_DISTRIBUTION "3.4.0-preview"
#define GEOPSYREFRA_GIT_COMMIT "adbbefd4e2ac5d2e4ca2c6b6b726c313f87f3b01"
#endif // GEOPSYREFRA_VERSION
ENDVERSION
replaceFile $BUILD_DIR/geopsyrefra/src geopsyrefraVersion.h
echo "Configure geopsyrefra"
cd "geopsyrefra"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir geopsyrefra -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          geopsyrefra \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/hvtfa/src || mkdir -p $BUILD_DIR/hvtfa/src
cat <<ENDVERSION > $TEMP_DIR/hvtfaVersion.h
#ifndef HVTFA_VERSION
#define HVTFA_VERSION "2.1.0"
#define HVTFA_VERSION_TIME "202006291326"
#define HVTFA_VERSION_TYPE "3.4"
#define HVTFA_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMiriam Kristekova (Geophysical Institute, Academy of Sciences, Bratislava, Slovak Republic)"
#define HVTFA_DISTRIBUTION "3.4.0-preview"
#define HVTFA_GIT_COMMIT "99023c0c11465c2bdf741ca9ae5b09bf26235a44"
#endif // HVTFA_VERSION
ENDVERSION
replaceFile $BUILD_DIR/hvtfa/src hvtfaVersion.h
echo "Configure hvtfa"
cd "hvtfa"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir hvtfa -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          hvtfa \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/campbelltob3/src || mkdir -p $BUILD_DIR/campbelltob3/src
cat <<ENDVERSION > $TEMP_DIR/campbelltob3Version.h
#ifndef CAMPBELLTOB3_VERSION
#define CAMPBELLTOB3_VERSION "1.0.1"
#define CAMPBELLTOB3_VERSION_TIME "202006291326"
#define CAMPBELLTOB3_VERSION_TYPE "3.4"
#define CAMPBELLTOB3_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)"
#define CAMPBELLTOB3_DISTRIBUTION "3.4.0-preview"
#define CAMPBELLTOB3_GIT_COMMIT "4b49cba3c1864a2d52fa9181b7f09a424159f90a"
#endif // CAMPBELLTOB3_VERSION
ENDVERSION
replaceFile $BUILD_DIR/campbelltob3/src campbelltob3Version.h
echo "Configure campbelltob3"
cd "campbelltob3"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir campbelltob3 -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          campbelltob3 \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/dinverdc/src || mkdir -p $BUILD_DIR/dinverdc/src
cat <<ENDVERSION > $TEMP_DIR/dinverdcVersion.h
#ifndef DINVERDC_VERSION
#define DINVERDC_VERSION "2.1.0"
#define DINVERDC_VERSION_TIME "202006291326"
#define DINVERDC_VERSION_TYPE "3.4"
#define DINVERDC_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define DINVERDC_DISTRIBUTION "3.4.0-preview"
#define DINVERDC_GIT_COMMIT "3affcea7160b5704f5ef8d489d878887dbdd8061"
#endif // DINVERDC_VERSION
ENDVERSION
replaceFile $BUILD_DIR/dinverdc/src dinverdcVersion.h
echo "Configure dinverdc"
cd "dinverdc"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir dinverdc -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          dinverdc \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/dinverext/src || mkdir -p $BUILD_DIR/dinverext/src
cat <<ENDVERSION > $TEMP_DIR/dinverextVersion.h
#ifndef DINVEREXT_VERSION
#define DINVEREXT_VERSION "1.0.3"
#define DINVEREXT_VERSION_TIME "202006291326"
#define DINVEREXT_VERSION_TYPE "3.4"
#define DINVEREXT_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define DINVEREXT_DISTRIBUTION "3.4.0-preview"
#define DINVEREXT_GIT_COMMIT "d56272a3fbd59d5f09d252ad8317eed0c2efa12a"
#endif // DINVEREXT_VERSION
ENDVERSION
replaceFile $BUILD_DIR/dinverext/src dinverextVersion.h
echo "Configure dinverext"
cd "dinverext"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir dinverext -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          dinverext \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/spac2disp/src || mkdir -p $BUILD_DIR/spac2disp/src
cat <<ENDVERSION > $TEMP_DIR/spac2dispVersion.h
#ifndef SPAC2DISP_VERSION
#define SPAC2DISP_VERSION "1.0.1"
#define SPAC2DISP_VERSION_TIME "202006291326"
#define SPAC2DISP_VERSION_TYPE "3.4"
#define SPAC2DISP_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Liège, Belgium)"
#define SPAC2DISP_DISTRIBUTION "3.4.0-preview"
#define SPAC2DISP_GIT_COMMIT "142bb677a7f0db29da6c616434fa4281b22a65b3"
#endif // SPAC2DISP_VERSION
ENDVERSION
replaceFile $BUILD_DIR/spac2disp/src spac2dispVersion.h
echo "Configure spac2disp"
cd "spac2disp"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir spac2disp -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          spac2disp \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/max2curve/src || mkdir -p $BUILD_DIR/max2curve/src
cat <<ENDVERSION > $TEMP_DIR/max2curveVersion.h
#ifndef MAX2CURVE_VERSION
#define MAX2CURVE_VERSION "1.1.1"
#define MAX2CURVE_VERSION_TIME "202006291326"
#define MAX2CURVE_VERSION_TYPE "3.4"
#define MAX2CURVE_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define MAX2CURVE_DISTRIBUTION "3.4.0-preview"
#define MAX2CURVE_GIT_COMMIT "e0ee2d8751f92cff354f7e1cdd1eec6bb03295e2"
#endif // MAX2CURVE_VERSION
ENDVERSION
replaceFile $BUILD_DIR/max2curve/src max2curveVersion.h
echo "Configure max2curve"
cd "max2curve"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir max2curve -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          max2curve \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gppoisson/src || mkdir -p $BUILD_DIR/gppoisson/src
cat <<ENDVERSION > $TEMP_DIR/gppoissonVersion.h
#ifndef GPPOISSON_VERSION
#define GPPOISSON_VERSION "2.0.0"
#define GPPOISSON_VERSION_TIME "202006291326"
#define GPPOISSON_VERSION_TYPE "3.4"
#define GPPOISSON_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPPOISSON_DISTRIBUTION "3.4.0-preview"
#define GPPOISSON_GIT_COMMIT "aa71522c835382a5b485aaf96a9c18b400d7f581"
#endif // GPPOISSON_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gppoisson/src gppoissonVersion.h
echo "Configure gppoisson"
cd "gppoisson"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gppoisson -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gppoisson \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpprofile/src || mkdir -p $BUILD_DIR/gpprofile/src
cat <<ENDVERSION > $TEMP_DIR/gpprofileVersion.h
#ifndef GPPROFILE_VERSION
#define GPPROFILE_VERSION "1.1.1"
#define GPPROFILE_VERSION_TIME "202006291326"
#define GPPROFILE_VERSION_TYPE "3.4"
#define GPPROFILE_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPPROFILE_DISTRIBUTION "3.4.0-preview"
#define GPPROFILE_GIT_COMMIT "dc35840bf63f5372740bca5219a925afe6988d10"
#endif // GPPROFILE_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpprofile/src gpprofileVersion.h
echo "Configure gpprofile"
cd "gpprofile"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpprofile -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpprofile \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpdc/src || mkdir -p $BUILD_DIR/gpdc/src
cat <<ENDVERSION > $TEMP_DIR/gpdcVersion.h
#ifndef GPDC_VERSION
#define GPDC_VERSION "1.0.2"
#define GPDC_VERSION_TIME "202006291326"
#define GPDC_VERSION_TYPE "3.4"
#define GPDC_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPDC_DISTRIBUTION "3.4.0-preview"
#define GPDC_GIT_COMMIT "4dcb3658ce632b8b3a1bc7bc4c36675694d8c7b6"
#endif // GPDC_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpdc/src gpdcVersion.h
echo "Configure gpdc"
cd "gpdc"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpdc -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpdc \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gplivemodel/src || mkdir -p $BUILD_DIR/gplivemodel/src
cat <<ENDVERSION > $TEMP_DIR/gplivemodelVersion.h
#ifndef GPLIVEMODEL_VERSION
#define GPLIVEMODEL_VERSION "1.0.2"
#define GPLIVEMODEL_VERSION_TIME "202006291326"
#define GPLIVEMODEL_VERSION_TYPE "3.4"
#define GPLIVEMODEL_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPLIVEMODEL_DISTRIBUTION "3.4.0-preview"
#define GPLIVEMODEL_GIT_COMMIT "21d8dfaaa152d8ed3daf2dc4ee31306c3d53c29d"
#endif // GPLIVEMODEL_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gplivemodel/src gplivemodelVersion.h
echo "Configure gplivemodel"
cd "gplivemodel"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gplivemodel -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gplivemodel \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpec8/src || mkdir -p $BUILD_DIR/gpec8/src
cat <<ENDVERSION > $TEMP_DIR/gpec8Version.h
#ifndef GPEC8_VERSION
#define GPEC8_VERSION "1.0.0"
#define GPEC8_VERSION_TIME "202006291326"
#define GPEC8_VERSION_TYPE "3.4"
#define GPEC8_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPEC8_DISTRIBUTION "3.4.0-preview"
#define GPEC8_GIT_COMMIT "bdccd9001ea74bf8342774a58c445f2e7333ecbe"
#endif // GPEC8_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpec8/src gpec8Version.h
echo "Configure gpec8"
cd "gpec8"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpec8 -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpec8 \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpdcreport/src || mkdir -p $BUILD_DIR/gpdcreport/src
cat <<ENDVERSION > $TEMP_DIR/gpdcreportVersion.h
#ifndef GPDCREPORT_VERSION
#define GPDCREPORT_VERSION "1.0.3"
#define GPDCREPORT_VERSION_TIME "202006291326"
#define GPDCREPORT_VERSION_TYPE "3.4"
#define GPDCREPORT_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPDCREPORT_DISTRIBUTION "3.4.0-preview"
#define GPDCREPORT_GIT_COMMIT "8a5ae1862a049630138931f54d7ac974e1023969"
#endif // GPDCREPORT_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpdcreport/src gpdcreportVersion.h
echo "Configure gpdcreport"
cd "gpdcreport"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpdcreport -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpdcreport \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gptarget/src || mkdir -p $BUILD_DIR/gptarget/src
cat <<ENDVERSION > $TEMP_DIR/gptargetVersion.h
#ifndef GPTARGET_VERSION
#define GPTARGET_VERSION "1.0.2"
#define GPTARGET_VERSION_TIME "202006291326"
#define GPTARGET_VERSION_TYPE "3.4"
#define GPTARGET_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPTARGET_DISTRIBUTION "3.4.0-preview"
#define GPTARGET_GIT_COMMIT "055e113d302c1e9508541fd9cec8730d55a9e0bb"
#endif // GPTARGET_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gptarget/src gptargetVersion.h
echo "Configure gptarget"
cd "gptarget"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gptarget -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gptarget \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpviewdcreport/src || mkdir -p $BUILD_DIR/gpviewdcreport/src
cat <<ENDVERSION > $TEMP_DIR/gpviewdcreportVersion.h
#ifndef GPVIEWDCREPORT_VERSION
#define GPVIEWDCREPORT_VERSION "1.0.1"
#define GPVIEWDCREPORT_VERSION_TIME "202006291326"
#define GPVIEWDCREPORT_VERSION_TYPE "3.4"
#define GPVIEWDCREPORT_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPVIEWDCREPORT_DISTRIBUTION "3.4.0-preview"
#define GPVIEWDCREPORT_GIT_COMMIT "8fa9e8820cb6cdc1b4c1cc3950167ddf97dbc92d"
#endif // GPVIEWDCREPORT_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpviewdcreport/src gpviewdcreportVersion.h
echo "Configure gpviewdcreport"
cd "gpviewdcreport"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpviewdcreport -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpviewdcreport \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpdcmisfit/src || mkdir -p $BUILD_DIR/gpdcmisfit/src
cat <<ENDVERSION > $TEMP_DIR/gpdcmisfitVersion.h
#ifndef GPDCMISFIT_VERSION
#define GPDCMISFIT_VERSION "1.0.0"
#define GPDCMISFIT_VERSION_TIME "202006291326"
#define GPDCMISFIT_VERSION_TYPE "3.4"
#define GPDCMISFIT_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPDCMISFIT_DISTRIBUTION "3.4.0-preview"
#define GPDCMISFIT_GIT_COMMIT "a007ba019fade81a35769b9c4a2510b094cde089"
#endif // GPDCMISFIT_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpdcmisfit/src gpdcmisfitVersion.h
echo "Configure gpdcmisfit"
cd "gpdcmisfit"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpdcmisfit -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpdcmisfit \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpell/src || mkdir -p $BUILD_DIR/gpell/src
cat <<ENDVERSION > $TEMP_DIR/gpellVersion.h
#ifndef GPELL_VERSION
#define GPELL_VERSION "1.0.1"
#define GPELL_VERSION_TIME "202006291326"
#define GPELL_VERSION_TYPE "3.4"
#define GPELL_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPELL_DISTRIBUTION "3.4.0-preview"
#define GPELL_GIT_COMMIT "5b64daeb86cbc38588c1446aa07f587799c5be1b"
#endif // GPELL_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpell/src gpellVersion.h
echo "Configure gpell"
cd "gpell"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpell -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpell \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpgroup2phase/src || mkdir -p $BUILD_DIR/gpgroup2phase/src
cat <<ENDVERSION > $TEMP_DIR/gpgroup2phaseVersion.h
#ifndef GPGROUP2PHASE_VERSION
#define GPGROUP2PHASE_VERSION "1.0.0"
#define GPGROUP2PHASE_VERSION_TIME "202006291326"
#define GPGROUP2PHASE_VERSION_TYPE "3.4"
#define GPGROUP2PHASE_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPGROUP2PHASE_DISTRIBUTION "3.4.0-preview"
#define GPGROUP2PHASE_GIT_COMMIT "da83c3a42f477023d809d7e3463a37ea132072c9"
#endif // GPGROUP2PHASE_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpgroup2phase/src gpgroup2phaseVersion.h
echo "Configure gpgroup2phase"
cd "gpgroup2phase"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpgroup2phase -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpgroup2phase \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpmodel2param/src || mkdir -p $BUILD_DIR/gpmodel2param/src
cat <<ENDVERSION > $TEMP_DIR/gpmodel2paramVersion.h
#ifndef GPMODEL2PARAM_VERSION
#define GPMODEL2PARAM_VERSION "1.0.0"
#define GPMODEL2PARAM_VERSION_TIME "202006291326"
#define GPMODEL2PARAM_VERSION_TYPE "3.4"
#define GPMODEL2PARAM_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPMODEL2PARAM_DISTRIBUTION "3.4.0-preview"
#define GPMODEL2PARAM_GIT_COMMIT "0bc79d9f09c5598cf9163bf0fd00ac1e58214a77"
#endif // GPMODEL2PARAM_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpmodel2param/src gpmodel2paramVersion.h
echo "Configure gpmodel2param"
cd "gpmodel2param"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpmodel2param -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpmodel2param \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpparam2model/src || mkdir -p $BUILD_DIR/gpparam2model/src
cat <<ENDVERSION > $TEMP_DIR/gpparam2modelVersion.h
#ifndef GPPARAM2MODEL_VERSION
#define GPPARAM2MODEL_VERSION "1.0.0"
#define GPPARAM2MODEL_VERSION_TIME "202006291326"
#define GPPARAM2MODEL_VERSION_TYPE "3.4"
#define GPPARAM2MODEL_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPPARAM2MODEL_DISTRIBUTION "3.4.0-preview"
#define GPPARAM2MODEL_GIT_COMMIT "2f8748f9415595b50cfac503bbca2c2f76ec1632"
#endif // GPPARAM2MODEL_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpparam2model/src gpparam2modelVersion.h
echo "Configure gpparam2model"
cd "gpparam2model"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpparam2model -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpparam2model \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpdepths/src || mkdir -p $BUILD_DIR/gpdepths/src
cat <<ENDVERSION > $TEMP_DIR/gpdepthsVersion.h
#ifndef GPDEPTHS_VERSION
#define GPDEPTHS_VERSION "1.0.0"
#define GPDEPTHS_VERSION_TIME "202006291326"
#define GPDEPTHS_VERSION_TYPE "3.4"
#define GPDEPTHS_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPDEPTHS_DISTRIBUTION "3.4.0-preview"
#define GPDEPTHS_GIT_COMMIT "ff7894f3e6dfb6010c7e6eb7d75d9bd806986653"
#endif // GPDEPTHS_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpdepths/src gpdepthsVersion.h
echo "Configure gpdepths"
cd "gpdepths"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpdepths -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpdepths \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpsort/src || mkdir -p $BUILD_DIR/gpsort/src
cat <<ENDVERSION > $TEMP_DIR/gpsortVersion.h
#ifndef GPSORT_VERSION
#define GPSORT_VERSION "1.0.0"
#define GPSORT_VERSION_TIME "202006291326"
#define GPSORT_VERSION_TYPE "3.4"
#define GPSORT_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPSORT_DISTRIBUTION "3.4.0-preview"
#define GPSORT_GIT_COMMIT "730053bda163f041418188c58525a1bb27c4f9d6"
#endif // GPSORT_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpsort/src gpsortVersion.h
echo "Configure gpsort"
cd "gpsort"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpsort -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpsort \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpcurve/src || mkdir -p $BUILD_DIR/gpcurve/src
cat <<ENDVERSION > $TEMP_DIR/gpcurveVersion.h
#ifndef GPCURVE_VERSION
#define GPCURVE_VERSION "1.0.0"
#define GPCURVE_VERSION_TIME "202006291326"
#define GPCURVE_VERSION_TYPE "3.4"
#define GPCURVE_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPCURVE_DISTRIBUTION "3.4.0-preview"
#define GPCURVE_GIT_COMMIT "1b72cb3ca8767db81d9d7a655a82e37fb5bab871"
#endif // GPCURVE_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpcurve/src gpcurveVersion.h
echo "Configure gpcurve"
cd "gpcurve"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpcurve -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpcurve \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gprandom/src || mkdir -p $BUILD_DIR/gprandom/src
cat <<ENDVERSION > $TEMP_DIR/gprandomVersion.h
#ifndef GPRANDOM_VERSION
#define GPRANDOM_VERSION "1.0.0"
#define GPRANDOM_VERSION_TIME "202006291326"
#define GPRANDOM_VERSION_TYPE "3.4"
#define GPRANDOM_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPRANDOM_DISTRIBUTION "3.4.0-preview"
#define GPRANDOM_GIT_COMMIT "eae07f957e099c370a5fa8727b6de9a55a19cb43"
#endif // GPRANDOM_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gprandom/src gprandomVersion.h
echo "Configure gprandom"
cd "gprandom"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gprandom -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gprandom \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpspac/src || mkdir -p $BUILD_DIR/gpspac/src
cat <<ENDVERSION > $TEMP_DIR/gpspacVersion.h
#ifndef GPSPAC_VERSION
#define GPSPAC_VERSION "1.0.0"
#define GPSPAC_VERSION_TIME "202006291326"
#define GPSPAC_VERSION_TYPE "3.4"
#define GPSPAC_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPSPAC_DISTRIBUTION "3.4.0-preview"
#define GPSPAC_GIT_COMMIT "5fbde63de7a7a37582d6e6ff809b68425989200a"
#endif // GPSPAC_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpspac/src gpspacVersion.h
echo "Configure gpspac"
cd "gpspac"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpspac -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpspac \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gprefra/src || mkdir -p $BUILD_DIR/gprefra/src
cat <<ENDVERSION > $TEMP_DIR/gprefraVersion.h
#ifndef GPREFRA_VERSION
#define GPREFRA_VERSION "1.0.0"
#define GPREFRA_VERSION_TIME "202006291326"
#define GPREFRA_VERSION_TYPE "3.4"
#define GPREFRA_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPREFRA_DISTRIBUTION "3.4.0-preview"
#define GPREFRA_GIT_COMMIT "c6163da5cb501b6ccdb03a51b866f2e03442eb46"
#endif // GPREFRA_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gprefra/src gprefraVersion.h
echo "Configure gprefra"
cd "gprefra"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gprefra -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gprefra \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpsignal/src || mkdir -p $BUILD_DIR/gpsignal/src
cat <<ENDVERSION > $TEMP_DIR/gpsignalVersion.h
#ifndef GPSIGNAL_VERSION
#define GPSIGNAL_VERSION "2.0.1"
#define GPSIGNAL_VERSION_TIME "202006291326"
#define GPSIGNAL_VERSION_TYPE "3.4"
#define GPSIGNAL_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPSIGNAL_DISTRIBUTION "3.4.0-preview"
#define GPSIGNAL_GIT_COMMIT "0ff87c3fe4e938c6020eaa1c34153019b21d5812"
#endif // GPSIGNAL_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpsignal/src gpsignalVersion.h
echo "Configure gpsignal"
cd "gpsignal"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpsignal -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpsignal \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gphistogram/src || mkdir -p $BUILD_DIR/gphistogram/src
cat <<ENDVERSION > $TEMP_DIR/gphistogramVersion.h
#ifndef GPHISTOGRAM_VERSION
#define GPHISTOGRAM_VERSION "1.2.0"
#define GPHISTOGRAM_VERSION_TIME "202006291326"
#define GPHISTOGRAM_VERSION_TYPE "3.4"
#define GPHISTOGRAM_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPHISTOGRAM_DISTRIBUTION "3.4.0-preview"
#define GPHISTOGRAM_GIT_COMMIT "76286435f1325cd65a87bf270b5e9e576022f42e"
#endif // GPHISTOGRAM_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gphistogram/src gphistogramVersion.h
echo "Configure gphistogram"
cd "gphistogram"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gphistogram -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gphistogram \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpviewmax/src || mkdir -p $BUILD_DIR/gpviewmax/src
cat <<ENDVERSION > $TEMP_DIR/gpviewmaxVersion.h
#ifndef GPVIEWMAX_VERSION
#define GPVIEWMAX_VERSION "1.1.0"
#define GPVIEWMAX_VERSION_TIME "202006291326"
#define GPVIEWMAX_VERSION_TYPE "3.4"
#define GPVIEWMAX_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)"
#define GPVIEWMAX_DISTRIBUTION "3.4.0-preview"
#define GPVIEWMAX_GIT_COMMIT "0b1b2b957197c1d280531ab1a0c3f4c2ec302f17"
#endif // GPVIEWMAX_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpviewmax/src gpviewmaxVersion.h
echo "Configure gpviewmax"
cd "gpviewmax"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpviewmax -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpviewmax \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpdistance/src || mkdir -p $BUILD_DIR/gpdistance/src
cat <<ENDVERSION > $TEMP_DIR/gpdistanceVersion.h
#ifndef GPDISTANCE_VERSION
#define GPDISTANCE_VERSION "1.0.0"
#define GPDISTANCE_VERSION_TIME "202006291326"
#define GPDISTANCE_VERSION_TYPE "3.4"
#define GPDISTANCE_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPDISTANCE_DISTRIBUTION "3.4.0-preview"
#define GPDISTANCE_GIT_COMMIT "49c015eac3b2ec2f9b0213733631e649ce914f78"
#endif // GPDISTANCE_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpdistance/src gpdistanceVersion.h
echo "Configure gpdistance"
cd "gpdistance"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpdistance -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpdistance \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gptime/src || mkdir -p $BUILD_DIR/gptime/src
cat <<ENDVERSION > $TEMP_DIR/gptimeVersion.h
#ifndef GPTIME_VERSION
#define GPTIME_VERSION "1.1.0"
#define GPTIME_VERSION_TIME "202007131310"
#define GPTIME_VERSION_TYPE "3.4"
#define GPTIME_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPTIME_DISTRIBUTION "3.4.0-preview"
#define GPTIME_GIT_COMMIT "3fe255b6ea4251cf5d0cbf5a8f63f109e0e6f733"
#endif // GPTIME_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gptime/src gptimeVersion.h
echo "Configure gptime"
cd "gptime"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gptime -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gptime \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpcoord/src || mkdir -p $BUILD_DIR/gpcoord/src
cat <<ENDVERSION > $TEMP_DIR/gpcoordVersion.h
#ifndef GPCOORD_VERSION
#define GPCOORD_VERSION "1.0.1"
#define GPCOORD_VERSION_TIME "202006291326"
#define GPCOORD_VERSION_TYPE "3.4"
#define GPCOORD_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPCOORD_DISTRIBUTION "3.4.0-preview"
#define GPCOORD_GIT_COMMIT "94d3dd9c041bff90fd45a227fe61540649a4ef68"
#endif // GPCOORD_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpcoord/src gpcoordVersion.h
echo "Configure gpcoord"
cd "gpcoord"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpcoord -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpcoord \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpreplace/src || mkdir -p $BUILD_DIR/gpreplace/src
cat <<ENDVERSION > $TEMP_DIR/gpreplaceVersion.h
#ifndef GPREPLACE_VERSION
#define GPREPLACE_VERSION "1.0.0"
#define GPREPLACE_VERSION_TIME "202006291326"
#define GPREPLACE_VERSION_TYPE "3.4"
#define GPREPLACE_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPREPLACE_DISTRIBUTION "3.4.0-preview"
#define GPREPLACE_GIT_COMMIT "cb3f0fa033fbd8459fda7e1aa43c58228f1bd51f"
#endif // GPREPLACE_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpreplace/src gpreplaceVersion.h
echo "Configure gpreplace"
cd "gpreplace"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpreplace -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpreplace \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpsh/src || mkdir -p $BUILD_DIR/gpsh/src
cat <<ENDVERSION > $TEMP_DIR/gpshVersion.h
#ifndef GPSH_VERSION
#define GPSH_VERSION "1.0.0"
#define GPSH_VERSION_TIME "202006291326"
#define GPSH_VERSION_TYPE "3.4"
#define GPSH_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPSH_DISTRIBUTION "3.4.0-preview"
#define GPSH_GIT_COMMIT "0d8b53604814a12f0bcb4539f32b81a107e2be99"
#endif // GPSH_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpsh/src gpshVersion.h
echo "Configure gpsh"
cd "gpsh"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpsh -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpsh \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpmt/src || mkdir -p $BUILD_DIR/gpmt/src
cat <<ENDVERSION > $TEMP_DIR/gpmtVersion.h
#ifndef GPMT_VERSION
#define GPMT_VERSION "1.0.0"
#define GPMT_VERSION_TIME "202006291326"
#define GPMT_VERSION_TYPE "3.4"
#define GPMT_AUTHORS "Marc Wathelet (LGIT, Grenoble, France)"
#define GPMT_DISTRIBUTION "3.4.0-preview"
#define GPMT_GIT_COMMIT "48b8d9b47f34e7f35a1ed31f00be7ec285783301"
#endif // GPMT_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpmt/src gpmtVersion.h
echo "Configure gpmt"
cd "gpmt"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpmt -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpmt \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpgridsearch/src || mkdir -p $BUILD_DIR/gpgridsearch/src
cat <<ENDVERSION > $TEMP_DIR/gpgridsearchVersion.h
#ifndef GPGRIDSEARCH_VERSION
#define GPGRIDSEARCH_VERSION "1.0.1"
#define GPGRIDSEARCH_VERSION_TIME "202006291326"
#define GPGRIDSEARCH_VERSION_TYPE "3.4"
#define GPGRIDSEARCH_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)"
#define GPGRIDSEARCH_DISTRIBUTION "3.4.0-preview"
#define GPGRIDSEARCH_GIT_COMMIT "c6de345659e1f27d51921ab19d4ea71f42d831a3"
#endif // GPGRIDSEARCH_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpgridsearch/src gpgridsearchVersion.h
echo "Configure gpgridsearch"
cd "gpgridsearch"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpgridsearch -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpgridsearch \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpfksimulator/src || mkdir -p $BUILD_DIR/gpfksimulator/src
cat <<ENDVERSION > $TEMP_DIR/gpfksimulatorVersion.h
#ifndef GPFKSIMULATOR_VERSION
#define GPFKSIMULATOR_VERSION "1.1.0"
#define GPFKSIMULATOR_VERSION_TIME "202006291326"
#define GPFKSIMULATOR_VERSION_TYPE "3.4"
#define GPFKSIMULATOR_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPFKSIMULATOR_DISTRIBUTION "3.4.0-preview"
#define GPFKSIMULATOR_GIT_COMMIT "40a4870cc743907a6cfe81b64cd2ef4d05ef568c"
#endif // GPFKSIMULATOR_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpfksimulator/src gpfksimulatorVersion.h
echo "Configure gpfksimulator"
cd "gpfksimulator"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpfksimulator -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpfksimulator \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpmaplayer/src || mkdir -p $BUILD_DIR/gpmaplayer/src
cat <<ENDVERSION > $TEMP_DIR/gpmaplayerVersion.h
#ifndef GPMAPLAYER_VERSION
#define GPMAPLAYER_VERSION "1.0.1"
#define GPMAPLAYER_VERSION_TIME "202006291326"
#define GPMAPLAYER_VERSION_TYPE "3.4"
#define GPMAPLAYER_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)"
#define GPMAPLAYER_DISTRIBUTION "3.4.0-preview"
#define GPMAPLAYER_GIT_COMMIT "42aa3e3344b3098e3b607d0a8047e2780ffb2b53"
#endif // GPMAPLAYER_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpmaplayer/src gpmaplayerVersion.h
echo "Configure gpmaplayer"
cd "gpmaplayer"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpmaplayer -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpmaplayer \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/dinvermatlab/src || mkdir -p $BUILD_DIR/dinvermatlab/src
cat <<ENDVERSION > $TEMP_DIR/dinvermatlabVersion.h
#ifndef DINVERMATLAB_VERSION
#define DINVERMATLAB_VERSION "1.0.2"
#define DINVERMATLAB_VERSION_TIME "202006291326"
#define DINVERMATLAB_VERSION_TYPE "3.4"
#define DINVERMATLAB_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define DINVERMATLAB_DISTRIBUTION "3.4.0-preview"
#define DINVERMATLAB_GIT_COMMIT "8100d42c83070b05072397bb7ae913d89562f325"
#endif // DINVERMATLAB_VERSION
ENDVERSION
replaceFile $BUILD_DIR/dinvermatlab/src dinvermatlabVersion.h
echo "Configure dinvermatlab"
cd "dinvermatlab"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir dinvermatlab -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          dinvermatlab \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/matfiles/src || mkdir -p $BUILD_DIR/matfiles/src
cat <<ENDVERSION > $TEMP_DIR/matfilesVersion.h
#ifndef MATFILES_VERSION
#define MATFILES_VERSION "1.0.2"
#define MATFILES_VERSION_TIME "202006291326"
#define MATFILES_VERSION_TYPE "3.4"
#define MATFILES_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)"
#define MATFILES_DISTRIBUTION "3.4.0-preview"
#define MATFILES_GIT_COMMIT "e655f52ba46e954a22bbe757558e7786e8a1113b"
#endif // MATFILES_VERSION
ENDVERSION
replaceFile $BUILD_DIR/matfiles/src matfilesVersion.h
echo "Configure matfiles"
cd "matfiles"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir matfiles -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          matfiles \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/GeopsyLand/src || mkdir -p $BUILD_DIR/GeopsyLand/src
cat <<ENDVERSION > $TEMP_DIR/GeopsyLandVersion.h
#ifndef GEOPSYLAND_VERSION
#define GEOPSYLAND_VERSION "1.0.1"
#define GEOPSYLAND_VERSION_TIME "202006291326"
#define GEOPSYLAND_VERSION_TYPE "3.4"
#define GEOPSYLAND_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)"
#define GEOPSYLAND_DISTRIBUTION "3.4.0-preview"
#define GEOPSYLAND_GIT_COMMIT "377b65f106fea2107ae1e4659d284ba569db6754"
#endif // GEOPSYLAND_VERSION
ENDVERSION
replaceFile $BUILD_DIR/GeopsyLand/src GeopsyLandVersion.h
echo "Configure GeopsyLand"
cd "GeopsyLand"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir GeopsyLand -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          GeopsyLand \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/gpvoronoi/src || mkdir -p $BUILD_DIR/gpvoronoi/src
cat <<ENDVERSION > $TEMP_DIR/gpvoronoiVersion.h
#ifndef GPVORONOI_VERSION
#define GPVORONOI_VERSION "0.0.1"
#define GPVORONOI_VERSION_TIME "202101141445"
#define GPVORONOI_VERSION_TYPE "3.4"
#define GPVORONOI_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)"
#define GPVORONOI_DISTRIBUTION "3.4.0-preview"
#define GPVORONOI_GIT_COMMIT "5bc3d471f79f306573c1154d8bc12f518677712f"
#endif // GPVORONOI_VERSION
ENDVERSION
replaceFile $BUILD_DIR/gpvoronoi/src gpvoronoiVersion.h
echo "Configure gpvoronoi"
cd "gpvoronoi"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir gpvoronoi -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          gpvoronoi \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/screenpicker/src || mkdir -p $BUILD_DIR/screenpicker/src
cat <<ENDVERSION > $TEMP_DIR/screenpickerVersion.h
#ifndef SCREENPICKER_VERSION
#define SCREENPICKER_VERSION "0.1.0"
#define SCREENPICKER_VERSION_TIME ""
#define SCREENPICKER_VERSION_TYPE "3.4"
#define SCREENPICKER_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)"
#define SCREENPICKER_DISTRIBUTION "3.4.0-preview"
#define SCREENPICKER_GIT_COMMIT "294efee8b2cfc3d783a672a4f654e2f2b060fc3d"
#endif // SCREENPICKER_VERSION
ENDVERSION
replaceFile $BUILD_DIR/screenpicker/src screenpickerVersion.h
echo "Configure screenpicker"
cd "screenpicker"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir screenpicker -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          screenpicker \\" >> $BUILD_DIR/geopsypack.pro
test -d $BUILD_DIR/phaseit/src || mkdir -p $BUILD_DIR/phaseit/src
cat <<ENDVERSION > $TEMP_DIR/phaseitVersion.h
#ifndef PHASEIT_VERSION
#define PHASEIT_VERSION "1.0.0"
#define PHASEIT_VERSION_TIME "202006291326"
#define PHASEIT_VERSION_TYPE "3.4"
#define PHASEIT_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)"
#define PHASEIT_DISTRIBUTION "3.4.0-preview"
#define PHASEIT_GIT_COMMIT "31dc7ca4506b0f6a0fa4811c326715de9788ae48"
#endif // PHASEIT_VERSION
ENDVERSION
replaceFile $BUILD_DIR/phaseit/src phaseitVersion.h
echo "Configure phaseit"
cd "phaseit"
if [ -e configure-3.4 ]; then
  CONFIGURE_SCRIPT=configure-3.4
else
  CONFIGURE_SCRIPT=configure
fi
echo "$SHELL $CONFIGURE_SCRIPT -accept-license -sourcedir $SOURCE_DIR -dest-prefix $BUILD_DIR -builddir $BUILD_DIR -buildsubdir phaseit -skip-qt-check $COMMANDLINE 2>$TEMP_DIR/error.log 1>$TEMP_DIR/info.log" > $TEMP_DIR/configure
if ! $SHELL $TEMP_DIR/configure; then
  cat $TEMP_DIR/error.log
  cat $TEMP_DIR/info.log
  cleanexit 2
else
  cat $TEMP_DIR/error.log
fi
cd ..
# Add project to main pro file
echo "          phaseit \\" >> $BUILD_DIR/geopsypack.pro
# Generate make file
if [ "$BUILD_DIR" = "$SOURCE_DIR" ]; then
  qmake geopsypack.pro
else
  cd $BUILD_DIR
  qmake geopsypack.pro
fi
###############################################################
# Final user message
###############################################################
echo
if [ "$PLATFORM" = "MINGW" ]; then
  CONFIGURE_COMMAND="sh configure"
else
  CONFIGURE_COMMAND="./configure"
fi
echo "  geopsypack is now configured for building."
echo
echo "  To proceed, run (if you have 8 cores)"
echo
if [ "${BUILD_DIR}" != "${SOURCE_DIR}" ]; then
  echo "    $ make -j 8 -C ${BUILD_DIR}"
else
  echo "    $ make -j 8"
fi
echo
echo "  Once everything is built, you must run either"
echo
echo "    $ su -c "make install", if root privileges are needed;"
echo "  or"
echo "    $ make install, if user permissions are sufficient."
echo
echo "  The current configuration options are stored in 'configure.cache'."
echo "  To change the configuration, run '$CONFIGURE_COMMAND [options]'."
echo
cleanexit 0
