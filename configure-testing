#!/bin/bash
# Script generated by dpgitconfigure on Feb  8 2020
#
#   Configure script for Linux, Mac OS X and Unix
#
# copyright (C) 2020 Marc Wathelet. All rights reserved.
#
#  This script is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#Platform options
case "$(uname)" in
  Linux) PLATFORM=LINUX ;;
  SunOS) PLATFORM=LINUX ;;
  Darwin) PLATFORM=MAC ;;
  MINGW*) PLATFORM=MINGW ;;
  *)
    echo "Unknown platform $(uname)"
    exit 2
  ;;
esac
# Current shell
if [ "$PLATFORM" = "MINGW" ]; then
  SHELL=sh
else
  SHELL=bash
fi
# Default options
LICENSE_ACCEPTED="no"
SKIP_QT_CHECK="no"
COMMANDLINE=""
SOURCE_DIR=$(cd $(dirname $0) && pwd)
BUILD_DIR=$SOURCE_DIR
while [ "$1" ]; do
  case "$1" in
    "-prefix" | "--prefix" | \
    "-bindir" | "--bindir" | \
    "-libdir" | "--libdir" | \
    "-incdir" | "--incdir" | \
    "-sharedir" | "--sharedir" | \
    "-dest-prefix" | "--dest-prefix" | \
    "-I" | \
    "-L" | \
    "-D" | \
    "-qt-bin-path" | "--qt-bin-path" | \
    "-cflags" | "--cflags" | \
    "-march" | "--march")
      COMMANDLINE="$COMMANDLINE $1"
     shift
      COMMANDLINE="$COMMANDLINE \"$1\""
    ;;
    "-shared" | "--shared" | \
    "-static" | "--static" | \
    "-pch" | "--pch" | \
    "-profile" | "--profile" | \
    "-win32" | "--win32" | \
    "-win64" | "--win64" | \
    "-no-svg" | "--no-svg" | \
    "-sse3" | "--sse3" | \
    "-skip-qt-translations" | "--skip-qt-translations")
      COMMANDLINE="$COMMANDLINE $1"
    ;;
    "-builddir" | "--builddir")
      COMMANDLINE="$COMMANDLINE $1"
      shift
      COMMANDLINE="$COMMANDLINE \"$1\""
      BUILD_DIR=$1
    ;;
    "-rpath" | "--rpath")
      if [ "${2:0:1}" = "-" ]; then
        COMMANDLINE="$COMMANDLINE -rpath"
      else
        shift
        COMMANDLINE="$COMMANDLINE -rpath \"$1\""
      fi
    ;;
    "-accept-license" | "--accept-license")
      LICENSE_ACCEPTED="yes"
      COMMANDLINE="$COMMANDLINE $1"
    ;;
    "-skip-qt-check" | "--skip-qt-check")
      SKIP_QT_CHECK="yes"
      COMMANDLINE="$COMMANDLINE $1"
    ;;
    "-h" | "-help" | "--help")
      echo
      echo "Usage: ./configure [options]"
      echo
      echo "Options:"
      echo
      echo " -qt-bin-path <DIR>  Use Qt in DIR instead of qt in PATH"
      echo " -accept-license     Skip interactive license acceptance"
      echo " -pch                Set precompiled headers on"
      echo
      echo "Installation paths:"
      echo
      echo " -prefix <DIR>       Base directory for installation"
      echo "                       (default /usr/local/Geopsy.org)"
      echo " -bindir <DIR>       Executables will be installed to dir"
      echo "                       (default PREFIX/bin)"
      echo " -libdir <DIR>       Libraries will be installed to dir"
      echo "                       (default PREFIX/lib)"
      echo " -incdir <DIR>       Headers will be installed to dir"
      echo "                       (default PREFIX/include)"
      echo " -sharedir <DIR>     Shared files and translations will be installed"
      echo "                     to dir (default PREFIX/share)"
      echo " -builddir <DIR>     Building in DIR instead of in source dir"
      echo
      echo "Configuration:"
      echo
      echo " -shared             Create and use shared libraries"
      echo " -static             Create and use static libraries"
      echo
      echo " -D <MACRO>          Defines MACRO"
      echo
      echo " -dest-prefix <DIR>  Destination prefix for all binaries"
      echo "                       (default working directory)"
      echo " -rpath <DIR>        Add DIR to library rutime search path"
      echo "                       (default PREFIX/lib, reset to null without DIR)"
      echo " -skip-qt-check      Do not check current Qt version"
      echo " -profile            Turn profiling on, add gcc option '-pg'"
      echo "                       (for development under Linux only)"
      echo " -win32              Turn on cross compilation with i686-mingw32"
      echo "                       (under Linux only)"
      echo " -win64              Turn on cross compilation with x86_64-mingw32"
      echo "                       (under Linux only)"
      echo " -no-svg             Do not compile support for Qt svg"
      echo " -cflags <FLAG>      Add FLAG to the list of compilation flags"
      echo " -sse3               Compile with SSE3 support"
      echo " -march <ARCH>       Specify the name of the target architecture"
      echo "                       Use ARCH=native for auto detection of the CPU's architecture"
      echo "                       Useful link: https://wiki.gentoo.org/wiki/Safe_CFLAGS"
      echo "                       Your architecture is:"
      grep -m1 -A3 "vendor_id" /proc/cpuinfo | awk '{printf("                       ");print}'
      echo
      echo
      echo "Third party libraries:"
      echo
      echo " -I dir              Add dir to the list of directories to be"
      echo "                     searched for headers"
      echo " -L dir              Add dir to the list of directories to be"
      echo "                     searched for libraries"
      echo
      exit
    ;;
    *)
      echo "Bad option $1, see './configure -h' for help"
      exit 2
    ;;
  esac
  shift
done
# If configure called from ./configure.cache, do not overwrite
if [ "$SAVE_CONFIGURE_OPTIONS_IN_CACHE" != "no" ]; then
  (
  cat << END
export SAVE_CONFIGURE_OPTIONS_IN_CACHE="no"
$SHELL configure $COMMANDLINE
END
  ) > configure.cache
  chmod a+x configure.cache
fi
#Check that Qt is correctly installed
if [ "$SKIP_QT_CHECK" = "no" ]; then
  if qmake -v > /dev/null 2>&1; then
    QT_VERSION=$(qmake -v | awk '{if(NR==2) print $4}')
    QT_VERSION_NUM=$(echo $QT_VERSION | awk 'BEGIN{FS="."}{print $1*1000000+$2*1000+$3}')
    if [ "$QT_VERSION_NUM" -lt "5012000" ]; then
      echo "*** ERROR *** : your Qt version is $QT_VERSION."
      echo "                At least version 5.12.0 is recommended."
      echo "                If you want to skip this version check,"
      echo "                add option -skip-qt-check."
      exit 2
    fi
  else
    echo "*** ERROR *** : qmake command is not available."
    echo "                Either Qt is not correctly installed"
    echo "                or PATH does not point to Qt binaries."
    exit 2
  fi
fi
# Show license if Makefile does not exist
if [ ! -e $BUILD_DIR/Makefile ] && [ "$LICENSE_ACCEPTED" = "no" ]; then
  echo
  echo "geopsypack contains items licensed to you under"
  echo "the terms of all these licenses:"
  echo
  for l in $(ls LICENSE.*); do
    echo "   $l"
  done
  echo
  LICENSE_ACCEPT=""
  while [ "$LICENSE_ACCEPT" != "no" ] && [ "$LICENSE_ACCEPT" != "yes" ]; do
    echo "Type 'view' to view all these licenses."
    echo "Type 'yes' to accept these license offers."
    echo "Type 'no' to decline these license offers."
    echo
    echo -n "Do you accept these license? "
    read LICENSE_ACCEPT
    if [ "$LICENSE_ACCEPT" = "view" ]; then
      echo
      echo "###########################################################"
      echo
      echo "Type SPACE BAR or RETURN to move down, 'q' for next license"
      echo
      echo "###########################################################"
      echo
      sleep 5
      for l in $(ls LICENSE.*); do
        less $l
      done
    fi
  done
  if [ "$LICENSE_ACCEPT" = "no" ]; then
    echo "You are not allowed to use this package."
    exit 2
  fi
fi
echo
# Check for Ubuntu Unity
# Comment this section if you are not running Ubuntu Unity with a recent release > 10.04
if which lsb_release > /dev/null 2>&1; then
  if [ $(lsb_release --id | awk 'BEGIN{FS=":"}{gsub("^[ \t]*", "", $2);print tolower($2)}') = "ubuntu" ]; then
    if [ $(lsb_release --release | awk 'BEGIN{FS=":"}{gsub("^[ \t]*", "", $2);print $2*100}') -gt 1004 ]; then
      COMMANDLINE="$COMMANDLINE -D UBUNTU_UNITY"
    fi
  fi
fi
TEMP_FILE="/tmp/configure_output_$RANDOM"
while [ -e $TEMP_FILE ]; do
  TEMP_FILE="/tmp/configure_output_$RANDOM"
done
cat <<ENDVERSION > mseed/src/mseedVersion.h
#ifndef MSEED_VERSION
#define MSEED_VERSION "2.5.1"
#define MSEED_VERSION_TIME "201908122143"
#define MSEED_VERSION_TYPE "testing"
#define MSEED_AUTHORS ""
#define MSEED_DISTRIBUTION "geopsypack-3.2.2"
#define MSEED_GIT_COMMIT "4fb405aea7e817e03a87aa18079d3c797e732530"
#endif // MSEED_VERSION
ENDVERSION
echo "Configure mseed"
cd "mseed"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir mseed -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > slink/src/slinkVersion.h
#ifndef SLINK_VERSION
#define SLINK_VERSION "1.6.0"
#define SLINK_VERSION_TIME "201908122143"
#define SLINK_VERSION_TYPE "testing"
#define SLINK_AUTHORS ""
#define SLINK_DISTRIBUTION "geopsypack-3.2.2"
#define SLINK_GIT_COMMIT "caf9dc455d1f2be8db43ab766a4e2540de3d3b84"
#endif // SLINK_VERSION
ENDVERSION
echo "Configure slink"
cd "slink"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir slink -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > QGpCoreTools/src/QGpCoreToolsVersion.h
#ifndef QGPCORETOOLS_VERSION
#define QGPCORETOOLS_VERSION "2.2.2"
#define QGPCORETOOLS_VERSION_TIME "201911191229"
#define QGPCORETOOLS_VERSION_TYPE "testing"
#define QGPCORETOOLS_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define QGPCORETOOLS_DISTRIBUTION "geopsypack-3.2.2"
#define QGPCORETOOLS_GIT_COMMIT "d96eb477309628e6e4c6601386af44fb3157cc79"
#endif // QGPCORETOOLS_VERSION
ENDVERSION
echo "Configure QGpCoreTools"
cd "QGpCoreTools"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir QGpCoreTools -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > QGpGuiTools/src/QGpGuiToolsVersion.h
#ifndef QGPGUITOOLS_VERSION
#define QGPGUITOOLS_VERSION "2.2.0"
#define QGPGUITOOLS_VERSION_TIME "201910010814"
#define QGPGUITOOLS_VERSION_TYPE "testing"
#define QGPGUITOOLS_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define QGPGUITOOLS_DISTRIBUTION "geopsypack-3.2.2"
#define QGPGUITOOLS_GIT_COMMIT "cf5d3f31ba86c6c77e4d876f6d9916e80c004be4"
#endif // QGPGUITOOLS_VERSION
ENDVERSION
echo "Configure QGpGuiTools"
cd "QGpGuiTools"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir QGpGuiTools -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > QGpCoreMath/src/QGpCoreMathVersion.h
#ifndef QGPCOREMATH_VERSION
#define QGPCOREMATH_VERSION "1.2.1"
#define QGPCOREMATH_VERSION_TIME "201911191229"
#define QGPCOREMATH_VERSION_TYPE "testing"
#define QGPCOREMATH_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define QGPCOREMATH_DISTRIBUTION "geopsypack-3.2.2"
#define QGPCOREMATH_GIT_COMMIT "0fef3bd43ff2cf662ab5b0addb19445961e5b43b"
#endif // QGPCOREMATH_VERSION
ENDVERSION
echo "Configure QGpCoreMath"
cd "QGpCoreMath"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir QGpCoreMath -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > SciFigs/src/SciFigsVersion.h
#ifndef SCIFIGS_VERSION
#define SCIFIGS_VERSION "3.1.1"
#define SCIFIGS_VERSION_TIME "201911191229"
#define SCIFIGS_VERSION_TYPE "testing"
#define SCIFIGS_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define SCIFIGS_DISTRIBUTION "geopsypack-3.2.2"
#define SCIFIGS_GIT_COMMIT "b6286d9d559133345e5dde267edd86ca10b74856"
#endif // SCIFIGS_VERSION
ENDVERSION
echo "Configure SciFigs"
cd "SciFigs"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir SciFigs -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > QGpGuiMath/src/QGpGuiMathVersion.h
#ifndef QGPGUIMATH_VERSION
#define QGPGUIMATH_VERSION "1.1.2"
#define QGPGUIMATH_VERSION_TIME "201911191229"
#define QGPGUIMATH_VERSION_TYPE "testing"
#define QGPGUIMATH_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define QGPGUIMATH_DISTRIBUTION "geopsypack-3.2.2"
#define QGPGUIMATH_GIT_COMMIT "be22226b6b0721a5bca175410db96a899b0b8272"
#endif // QGPGUIMATH_VERSION
ENDVERSION
echo "Configure QGpGuiMath"
cd "QGpGuiMath"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir QGpGuiMath -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > figue/src/figueVersion.h
#ifndef FIGUE_VERSION
#define FIGUE_VERSION "2.0.2"
#define FIGUE_VERSION_TIME "201911191229"
#define FIGUE_VERSION_TYPE "testing"
#define FIGUE_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define FIGUE_DISTRIBUTION "geopsypack-3.2.2"
#define FIGUE_GIT_COMMIT "96f24a847d73922a7cbcaa2e511aac5c06d8f2d6"
#endif // FIGUE_VERSION
ENDVERSION
echo "Configure figue"
cd "figue"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir figue -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > QGpCoreWave/src/QGpCoreWaveVersion.h
#ifndef QGPCOREWAVE_VERSION
#define QGPCOREWAVE_VERSION "2.0.2"
#define QGPCOREWAVE_VERSION_TIME "201910010814"
#define QGPCOREWAVE_VERSION_TYPE "testing"
#define QGPCOREWAVE_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)\nPhil Cummins (RSES, Canberra, Australia)\nRoger Wisen (RAMBOLL, Copenhagen, Denmark)"
#define QGPCOREWAVE_DISTRIBUTION "geopsypack-3.2.2"
#define QGPCOREWAVE_GIT_COMMIT "f676df0cbb46c9bef52014821d759398197bfe33"
#endif // QGPCOREWAVE_VERSION
ENDVERSION
echo "Configure QGpCoreWave"
cd "QGpCoreWave"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir QGpCoreWave -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > QGpGuiWave/src/QGpGuiWaveVersion.h
#ifndef QGPGUIWAVE_VERSION
#define QGPGUIWAVE_VERSION "1.0.0"
#define QGPGUIWAVE_VERSION_TIME "201908261420"
#define QGPGUIWAVE_VERSION_TYPE "testing"
#define QGPGUIWAVE_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)"
#define QGPGUIWAVE_DISTRIBUTION "geopsypack-3.2.2"
#define QGPGUIWAVE_GIT_COMMIT "aabeacc02664b41f47fbff61c5cf651ebeddae5e"
#endif // QGPGUIWAVE_VERSION
ENDVERSION
echo "Configure QGpGuiWave"
cd "QGpGuiWave"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir QGpGuiWave -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > QGpCompatibility/src/QGpCompatibilityVersion.h
#ifndef QGPCOMPATIBILITY_VERSION
#define QGPCOMPATIBILITY_VERSION "1.0.1"
#define QGPCOMPATIBILITY_VERSION_TIME "201910010814"
#define QGPCOMPATIBILITY_VERSION_TYPE "testing"
#define QGPCOMPATIBILITY_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define QGPCOMPATIBILITY_DISTRIBUTION "geopsypack-3.2.2"
#define QGPCOMPATIBILITY_GIT_COMMIT "f8fc8072a6ea5864a5441fae1eeaddaacca24c8b"
#endif // QGPCOMPATIBILITY_VERSION
ENDVERSION
echo "Configure QGpCompatibility"
cd "QGpCompatibility"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir QGpCompatibility -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > GeopsyCore/src/GeopsyCoreVersion.h
#ifndef GEOPSYCORE_VERSION
#define GEOPSYCORE_VERSION "4.2.1"
#define GEOPSYCORE_VERSION_TIME "201911191229"
#define GEOPSYCORE_VERSION_TYPE "testing"
#define GEOPSYCORE_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define GEOPSYCORE_DISTRIBUTION "geopsypack-3.2.2"
#define GEOPSYCORE_GIT_COMMIT "f9cc229bb629981531fee435f6391d019667732d"
#endif // GEOPSYCORE_VERSION
ENDVERSION
echo "Configure GeopsyCore"
cd "GeopsyCore"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir GeopsyCore -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > GeopsyGui/src/GeopsyGuiVersion.h
#ifndef GEOPSYGUI_VERSION
#define GEOPSYGUI_VERSION "3.2.1"
#define GEOPSYGUI_VERSION_TIME "201911191229"
#define GEOPSYGUI_VERSION_TYPE "testing"
#define GEOPSYGUI_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define GEOPSYGUI_DISTRIBUTION "geopsypack-3.2.2"
#define GEOPSYGUI_GIT_COMMIT "a4b706d94a9aa43bc3f9629c389438776a0eb563"
#endif // GEOPSYGUI_VERSION
ENDVERSION
echo "Configure GeopsyGui"
cd "GeopsyGui"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir GeopsyGui -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > geopsyfigs/src/geopsyfigsVersion.h
#ifndef GEOPSYFIGS_VERSION
#define GEOPSYFIGS_VERSION "1.0.0"
#define GEOPSYFIGS_VERSION_TIME "201908261420"
#define GEOPSYFIGS_VERSION_TYPE "testing"
#define GEOPSYFIGS_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GEOPSYFIGS_DISTRIBUTION "geopsypack-3.2.2"
#define GEOPSYFIGS_GIT_COMMIT "2c6af0baaf66d516d453ddbd974ffca19c353fca"
#endif // GEOPSYFIGS_VERSION
ENDVERSION
echo "Configure geopsyfigs"
cd "geopsyfigs"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir geopsyfigs -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > GeopsySLink/src/GeopsySLinkVersion.h
#ifndef GEOPSYSLINK_VERSION
#define GEOPSYSLINK_VERSION "2.0.1"
#define GEOPSYSLINK_VERSION_TIME "201910010814"
#define GEOPSYSLINK_VERSION_TYPE "testing"
#define GEOPSYSLINK_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GEOPSYSLINK_DISTRIBUTION "geopsypack-3.2.2"
#define GEOPSYSLINK_GIT_COMMIT "6164b732d82c4df177eb187397b1234e93d23403"
#endif // GEOPSYSLINK_VERSION
ENDVERSION
echo "Configure GeopsySLink"
cd "GeopsySLink"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir GeopsySLink -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > GeopsySLinkGui/src/GeopsySLinkGuiVersion.h
#ifndef GEOPSYSLINKGUI_VERSION
#define GEOPSYSLINKGUI_VERSION "2.0.1"
#define GEOPSYSLINKGUI_VERSION_TIME "201911191229"
#define GEOPSYSLINKGUI_VERSION_TYPE "testing"
#define GEOPSYSLINKGUI_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GEOPSYSLINKGUI_DISTRIBUTION "geopsypack-3.2.2"
#define GEOPSYSLINKGUI_GIT_COMMIT "e4139ed0220c6769534f71594d10f6037a0e1d47"
#endif // GEOPSYSLINKGUI_VERSION
ENDVERSION
echo "Configure GeopsySLinkGui"
cd "GeopsySLinkGui"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir GeopsySLinkGui -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > DinverCore/src/DinverCoreVersion.h
#ifndef DINVERCORE_VERSION
#define DINVERCORE_VERSION "1.1.0"
#define DINVERCORE_VERSION_TIME "201910010814"
#define DINVERCORE_VERSION_TYPE "testing"
#define DINVERCORE_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define DINVERCORE_DISTRIBUTION "geopsypack-3.2.2"
#define DINVERCORE_GIT_COMMIT "d509b933d032a3a301f44f6932f81746a67a0635"
#endif // DINVERCORE_VERSION
ENDVERSION
echo "Configure DinverCore"
cd "DinverCore"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir DinverCore -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > DinverGui/src/DinverGuiVersion.h
#ifndef DINVERGUI_VERSION
#define DINVERGUI_VERSION "1.0.0"
#define DINVERGUI_VERSION_TIME "201908261420"
#define DINVERGUI_VERSION_TYPE "testing"
#define DINVERGUI_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define DINVERGUI_DISTRIBUTION "geopsypack-3.2.2"
#define DINVERGUI_GIT_COMMIT "ef499aaec7da1a2a8e123e5b3f29105b6f830276"
#endif // DINVERGUI_VERSION
ENDVERSION
echo "Configure DinverGui"
cd "DinverGui"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir DinverGui -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > DinverDCCore/src/DinverDCCoreVersion.h
#ifndef DINVERDCCORE_VERSION
#define DINVERDCCORE_VERSION "2.0.2"
#define DINVERDCCORE_VERSION_TIME "201910010814"
#define DINVERDCCORE_VERSION_TYPE "testing"
#define DINVERDCCORE_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define DINVERDCCORE_DISTRIBUTION "geopsypack-3.2.2"
#define DINVERDCCORE_GIT_COMMIT "0a65c7e921b9205414c7d29f34c4dd224e24f969"
#endif // DINVERDCCORE_VERSION
ENDVERSION
echo "Configure DinverDCCore"
cd "DinverDCCore"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir DinverDCCore -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > DinverDCGui/src/DinverDCGuiVersion.h
#ifndef DINVERDCGUI_VERSION
#define DINVERDCGUI_VERSION "1.0.0"
#define DINVERDCGUI_VERSION_TIME "201908261420"
#define DINVERDCGUI_VERSION_TYPE "testing"
#define DINVERDCGUI_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define DINVERDCGUI_DISTRIBUTION "geopsypack-3.2.2"
#define DINVERDCGUI_GIT_COMMIT "2a94c76dbcb63d3ebaae1862855b9ca4497a4816"
#endif // DINVERDCGUI_VERSION
ENDVERSION
echo "Configure DinverDCGui"
cd "DinverDCGui"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir DinverDCGui -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > QGpCoreStat/src/QGpCoreStatVersion.h
#ifndef QGPCORESTAT_VERSION
#define QGPCORESTAT_VERSION "1.0.1"
#define QGPCORESTAT_VERSION_TIME "201909191926"
#define QGPCORESTAT_VERSION_TYPE "testing"
#define QGPCORESTAT_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)"
#define QGPCORESTAT_DISTRIBUTION "geopsypack-3.2.2"
#define QGPCORESTAT_GIT_COMMIT "71252e3a58d0fd55f4fb30c620156a94b4f5bacf"
#endif // QGPCORESTAT_VERSION
ENDVERSION
echo "Configure QGpCoreStat"
cd "QGpCoreStat"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir QGpCoreStat -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > ArrayCore/src/ArrayCoreVersion.h
#ifndef ARRAYCORE_VERSION
#define ARRAYCORE_VERSION "3.2.0"
#define ARRAYCORE_VERSION_TIME "201910010814"
#define ARRAYCORE_VERSION_TYPE "testing"
#define ARRAYCORE_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define ARRAYCORE_DISTRIBUTION "geopsypack-3.2.2"
#define ARRAYCORE_GIT_COMMIT "d426c51fb72e3b27c9b628a2ead0d833d5b8afb3"
#endif // ARRAYCORE_VERSION
ENDVERSION
echo "Configure ArrayCore"
cd "ArrayCore"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir ArrayCore -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > ArrayGui/src/ArrayGuiVersion.h
#ifndef ARRAYGUI_VERSION
#define ARRAYGUI_VERSION "1.1.0"
#define ARRAYGUI_VERSION_TIME "201909230925"
#define ARRAYGUI_VERSION_TYPE "testing"
#define ARRAYGUI_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define ARRAYGUI_DISTRIBUTION "geopsypack-3.2.2"
#define ARRAYGUI_GIT_COMMIT "570d6f667163db14c2db49a97d0144d0eeaea0b3"
#endif // ARRAYGUI_VERSION
ENDVERSION
echo "Configure ArrayGui"
cd "ArrayGui"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir ArrayGui -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > MonoStation/src/MonoStationVersion.h
#ifndef MONOSTATION_VERSION
#define MONOSTATION_VERSION "2.1.1"
#define MONOSTATION_VERSION_TIME "201910010814"
#define MONOSTATION_VERSION_TYPE "testing"
#define MONOSTATION_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define MONOSTATION_DISTRIBUTION "geopsypack-3.2.2"
#define MONOSTATION_GIT_COMMIT "9a935dd88b3e9365e95eaf708ddcbe42bc23110d"
#endif // MONOSTATION_VERSION
ENDVERSION
echo "Configure MonoStation"
cd "MonoStation"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir MonoStation -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > geopsy-fk/src/geopsy-fkVersion.h
#ifndef GEOPSY_FK_VERSION
#define GEOPSY_FK_VERSION "1.0.0"
#define GEOPSY_FK_VERSION_TIME "201908261420"
#define GEOPSY_FK_VERSION_TYPE "testing"
#define GEOPSY_FK_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)"
#define GEOPSY_FK_DISTRIBUTION "geopsypack-3.2.2"
#define GEOPSY_FK_GIT_COMMIT "e75c66417a9da8384c4565aaa3ecaac38a637056"
#endif // GEOPSY_FK_VERSION
ENDVERSION
echo "Configure geopsy-fk"
cd "geopsy-fk"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir geopsy-fk -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > geopsy-spac/src/geopsy-spacVersion.h
#ifndef GEOPSY_SPAC_VERSION
#define GEOPSY_SPAC_VERSION "1.0.0"
#define GEOPSY_SPAC_VERSION_TIME "201908261420"
#define GEOPSY_SPAC_VERSION_TYPE "testing"
#define GEOPSY_SPAC_AUTHORS ""
#define GEOPSY_SPAC_DISTRIBUTION "geopsypack-3.2.2"
#define GEOPSY_SPAC_GIT_COMMIT "dbfee92dab3ac52e2384ae0760f5901515b79ff6"
#endif // GEOPSY_SPAC_VERSION
ENDVERSION
echo "Configure geopsy-spac"
cd "geopsy-spac"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir geopsy-spac -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > geopsy-hv/src/geopsy-hvVersion.h
#ifndef GEOPSY_HV_VERSION
#define GEOPSY_HV_VERSION "0.1.0"
#define GEOPSY_HV_VERSION_TIME ""
#define GEOPSY_HV_VERSION_TYPE "testing"
#define GEOPSY_HV_AUTHORS ""
#define GEOPSY_HV_DISTRIBUTION "geopsypack-3.2.2"
#define GEOPSY_HV_GIT_COMMIT "bb3aee3eaa01a3154762e49d2725941974f58da0"
#endif // GEOPSY_HV_VERSION
ENDVERSION
echo "Configure geopsy-hv"
cd "geopsy-hv"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir geopsy-hv -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > geopsy/src/geopsyVersion.h
#ifndef GEOPSY_VERSION
#define GEOPSY_VERSION "3.2.0"
#define GEOPSY_VERSION_TIME "201911191229"
#define GEOPSY_VERSION_TYPE "testing"
#define GEOPSY_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define GEOPSY_DISTRIBUTION "geopsypack-3.2.2"
#define GEOPSY_GIT_COMMIT "15af56a12050616bd47bbdfeca139787b471bdc8"
#endif // GEOPSY_VERSION
ENDVERSION
echo "Configure geopsy"
cd "geopsy"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir geopsy -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > vslarray/src/vslarrayVersion.h
#ifndef VSLARRAY_VERSION
#define VSLARRAY_VERSION "1.0.0"
#define VSLARRAY_VERSION_TIME "201908261420"
#define VSLARRAY_VERSION_TYPE "testing"
#define VSLARRAY_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define VSLARRAY_DISTRIBUTION "geopsypack-3.2.2"
#define VSLARRAY_GIT_COMMIT "643091c2495a33ed65e1ebb17fb235a8848e56fb"
#endif // VSLARRAY_VERSION
ENDVERSION
echo "Configure vslarray"
cd "vslarray"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir vslarray -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > dinver/src/dinverVersion.h
#ifndef DINVER_VERSION
#define DINVER_VERSION "1.0.2"
#define DINVER_VERSION_TIME "201910010814"
#define DINVER_VERSION_TYPE "testing"
#define DINVER_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define DINVER_DISTRIBUTION "geopsypack-3.2.2"
#define DINVER_GIT_COMMIT "3772ac911ff038a40653365b207c1a6042526916"
#endif // DINVER_VERSION
ENDVERSION
echo "Configure dinver"
cd "dinver"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir dinver -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > WaranCore/src/WaranCoreVersion.h
#ifndef WARANCORE_VERSION
#define WARANCORE_VERSION "1.0.0"
#define WARANCORE_VERSION_TIME "201908261420"
#define WARANCORE_VERSION_TYPE "testing"
#define WARANCORE_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define WARANCORE_DISTRIBUTION "geopsypack-3.2.2"
#define WARANCORE_GIT_COMMIT "bf7f607829849583d7544348c78b372585ad0182"
#endif // WARANCORE_VERSION
ENDVERSION
echo "Configure WaranCore"
cd "WaranCore"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir WaranCore -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > TapePositioningSystem/src/TapePositioningSystemVersion.h
#ifndef TAPEPOSITIONINGSYSTEM_VERSION
#define TAPEPOSITIONINGSYSTEM_VERSION "1.0.0"
#define TAPEPOSITIONINGSYSTEM_VERSION_TIME "201908261420"
#define TAPEPOSITIONINGSYSTEM_VERSION_TYPE "testing"
#define TAPEPOSITIONINGSYSTEM_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)"
#define TAPEPOSITIONINGSYSTEM_DISTRIBUTION "geopsypack-3.2.2"
#define TAPEPOSITIONINGSYSTEM_GIT_COMMIT "960b73d89b4e70f5beae16ba29e7d0e4a95352ff"
#endif // TAPEPOSITIONINGSYSTEM_VERSION
ENDVERSION
echo "Configure TapePositioningSystem"
cd "TapePositioningSystem"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir TapePositioningSystem -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > waran/src/waranVersion.h
#ifndef WARAN_VERSION
#define WARAN_VERSION "1.1.0"
#define WARAN_VERSION_TIME "201909191926"
#define WARAN_VERSION_TYPE "testing"
#define WARAN_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)"
#define WARAN_DISTRIBUTION "geopsypack-3.2.2"
#define WARAN_GIT_COMMIT "48efd521329d7eee78f59d9c136b591bc223f230"
#endif // WARAN_VERSION
ENDVERSION
echo "Configure waran"
cd "waran"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir waran -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > warangps/src/warangpsVersion.h
#ifndef WARANGPS_VERSION
#define WARANGPS_VERSION "1.1.0"
#define WARANGPS_VERSION_TIME "201909230925"
#define WARANGPS_VERSION_TYPE "testing"
#define WARANGPS_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define WARANGPS_DISTRIBUTION "geopsypack-3.2.2"
#define WARANGPS_GIT_COMMIT "fc1d853876984b04519222a3b7adbbd2dc1a1f9e"
#endif // WARANGPS_VERSION
ENDVERSION
echo "Configure warangps"
cd "warangps"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir warangps -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > geopsyarray/src/geopsyarrayVersion.h
#ifndef GEOPSYARRAY_VERSION
#define GEOPSYARRAY_VERSION "3.1.2"
#define GEOPSYARRAY_VERSION_TIME "201911191229"
#define GEOPSYARRAY_VERSION_TYPE "testing"
#define GEOPSYARRAY_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define GEOPSYARRAY_DISTRIBUTION "geopsypack-3.2.2"
#define GEOPSYARRAY_GIT_COMMIT "a46d773ab2d7c0e98458754bbb7ccc3aeab8a1cf"
#endif // GEOPSYARRAY_VERSION
ENDVERSION
echo "Configure geopsyarray"
cd "geopsyarray"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir geopsyarray -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > geopsyhv/src/geopsyhvVersion.h
#ifndef GEOPSYHV_VERSION
#define GEOPSYHV_VERSION "3.0.2"
#define GEOPSYHV_VERSION_TIME "201911191229"
#define GEOPSYHV_VERSION_TYPE "testing"
#define GEOPSYHV_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define GEOPSYHV_DISTRIBUTION "geopsypack-3.2.2"
#define GEOPSYHV_GIT_COMMIT "27089a24af347f39b3c5c94f5a802ab5b026da43"
#endif // GEOPSYHV_VERSION
ENDVERSION
echo "Configure geopsyhv"
cd "geopsyhv"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir geopsyhv -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > geopsydamping/src/geopsydampingVersion.h
#ifndef GEOPSYDAMPING_VERSION
#define GEOPSYDAMPING_VERSION "2.0.0"
#define GEOPSYDAMPING_VERSION_TIME "201908261420"
#define GEOPSYDAMPING_VERSION_TYPE "testing"
#define GEOPSYDAMPING_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define GEOPSYDAMPING_DISTRIBUTION "geopsypack-3.2.2"
#define GEOPSYDAMPING_GIT_COMMIT "c2c209eae5d3cb9f28a22a6fd8c9ba20941363e5"
#endif // GEOPSYDAMPING_VERSION
ENDVERSION
echo "Configure geopsydamping"
cd "geopsydamping"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir geopsydamping -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > geopsytfa/src/geopsytfaVersion.h
#ifndef GEOPSYTFA_VERSION
#define GEOPSYTFA_VERSION "2.0.0"
#define GEOPSYTFA_VERSION_TIME "201908261420"
#define GEOPSYTFA_VERSION_TYPE "testing"
#define GEOPSYTFA_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GEOPSYTFA_DISTRIBUTION "geopsypack-3.2.2"
#define GEOPSYTFA_GIT_COMMIT "8c4398e26fd7427a1bdd9b59df6f8cd1bec620f7"
#endif // GEOPSYTFA_VERSION
ENDVERSION
echo "Configure geopsytfa"
cd "geopsytfa"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir geopsytfa -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > geopsynr/src/geopsynrVersion.h
#ifndef GEOPSYNR_VERSION
#define GEOPSYNR_VERSION "1.0.0"
#define GEOPSYNR_VERSION_TIME "201908261420"
#define GEOPSYNR_VERSION_TYPE "testing"
#define GEOPSYNR_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GEOPSYNR_DISTRIBUTION "geopsypack-3.2.2"
#define GEOPSYNR_GIT_COMMIT "76cef96be1845c1c2673497c2851377d0fdafc8f"
#endif // GEOPSYNR_VERSION
ENDVERSION
echo "Configure geopsynr"
cd "geopsynr"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir geopsynr -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > geopsyptmotion/src/geopsyptmotionVersion.h
#ifndef GEOPSYPTMOTION_VERSION
#define GEOPSYPTMOTION_VERSION "2.0.0"
#define GEOPSYPTMOTION_VERSION_TIME "201908261420"
#define GEOPSYPTMOTION_VERSION_TYPE "testing"
#define GEOPSYPTMOTION_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define GEOPSYPTMOTION_DISTRIBUTION "geopsypack-3.2.2"
#define GEOPSYPTMOTION_GIT_COMMIT "77adecc3cb552543fa82d09976b33838c0b534b3"
#endif // GEOPSYPTMOTION_VERSION
ENDVERSION
echo "Configure geopsyptmotion"
cd "geopsyptmotion"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir geopsyptmotion -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > geopsyrefra/src/geopsyrefraVersion.h
#ifndef GEOPSYREFRA_VERSION
#define GEOPSYREFRA_VERSION "2.0.0"
#define GEOPSYREFRA_VERSION_TIME "201908261420"
#define GEOPSYREFRA_VERSION_TYPE "testing"
#define GEOPSYREFRA_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define GEOPSYREFRA_DISTRIBUTION "geopsypack-3.2.2"
#define GEOPSYREFRA_GIT_COMMIT "8c2ff6ae9b5161e567a3e97370f7ea4baf1345bd"
#endif // GEOPSYREFRA_VERSION
ENDVERSION
echo "Configure geopsyrefra"
cd "geopsyrefra"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir geopsyrefra -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > hvtfa/src/hvtfaVersion.h
#ifndef HVTFA_VERSION
#define HVTFA_VERSION "2.0.0"
#define HVTFA_VERSION_TIME "201908261420"
#define HVTFA_VERSION_TYPE "testing"
#define HVTFA_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)\nMiriam Kristekova (Geophysical Institute, Academy of Sciences, Bratislava, Slovak Republic)"
#define HVTFA_DISTRIBUTION "geopsypack-3.2.2"
#define HVTFA_GIT_COMMIT "c7756d5d30606f20e6bcbeb312339712496b7bda"
#endif // HVTFA_VERSION
ENDVERSION
echo "Configure hvtfa"
cd "hvtfa"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir hvtfa -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > campbelltob3/src/campbelltob3Version.h
#ifndef CAMPBELLTOB3_VERSION
#define CAMPBELLTOB3_VERSION "1.0.0"
#define CAMPBELLTOB3_VERSION_TIME "201908261420"
#define CAMPBELLTOB3_VERSION_TYPE "testing"
#define CAMPBELLTOB3_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)"
#define CAMPBELLTOB3_DISTRIBUTION "geopsypack-3.2.2"
#define CAMPBELLTOB3_GIT_COMMIT "d930f580cea41bd6352f39f93856326a4f3d33b3"
#endif // CAMPBELLTOB3_VERSION
ENDVERSION
echo "Configure campbelltob3"
cd "campbelltob3"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir campbelltob3 -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > dinverdc/src/dinverdcVersion.h
#ifndef DINVERDC_VERSION
#define DINVERDC_VERSION "2.0.0"
#define DINVERDC_VERSION_TIME "201908261420"
#define DINVERDC_VERSION_TYPE "testing"
#define DINVERDC_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define DINVERDC_DISTRIBUTION "geopsypack-3.2.2"
#define DINVERDC_GIT_COMMIT "e8b1fbc6f96a3634b362ce02dce25d50ae65f8d1"
#endif // DINVERDC_VERSION
ENDVERSION
echo "Configure dinverdc"
cd "dinverdc"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir dinverdc -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > dinverext/src/dinverextVersion.h
#ifndef DINVEREXT_VERSION
#define DINVEREXT_VERSION "1.0.2"
#define DINVEREXT_VERSION_TIME "201910010814"
#define DINVEREXT_VERSION_TYPE "testing"
#define DINVEREXT_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define DINVEREXT_DISTRIBUTION "geopsypack-3.2.2"
#define DINVEREXT_GIT_COMMIT "7b5d3398db91297a179ee4f3b0dfefa63f1d925f"
#endif // DINVEREXT_VERSION
ENDVERSION
echo "Configure dinverext"
cd "dinverext"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir dinverext -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > spac2disp/src/spac2dispVersion.h
#ifndef SPAC2DISP_VERSION
#define SPAC2DISP_VERSION "1.0.0"
#define SPAC2DISP_VERSION_TIME "201908261420"
#define SPAC2DISP_VERSION_TYPE "testing"
#define SPAC2DISP_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)\nMarc Wathelet (ULg, Li√®ge, Belgium)"
#define SPAC2DISP_DISTRIBUTION "geopsypack-3.2.2"
#define SPAC2DISP_GIT_COMMIT "71a3706c8a14a9f9a18ee8db29f32580a90a1f00"
#endif // SPAC2DISP_VERSION
ENDVERSION
echo "Configure spac2disp"
cd "spac2disp"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir spac2disp -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > max2curve/src/max2curveVersion.h
#ifndef MAX2CURVE_VERSION
#define MAX2CURVE_VERSION "1.1.0"
#define MAX2CURVE_VERSION_TIME "201909230925"
#define MAX2CURVE_VERSION_TYPE "testing"
#define MAX2CURVE_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define MAX2CURVE_DISTRIBUTION "geopsypack-3.2.2"
#define MAX2CURVE_GIT_COMMIT "c35e831a8ad2a92499e938995a2e1c9eed6d848e"
#endif // MAX2CURVE_VERSION
ENDVERSION
echo "Configure max2curve"
cd "max2curve"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir max2curve -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gppoisson/src/gppoissonVersion.h
#ifndef GPPOISSON_VERSION
#define GPPOISSON_VERSION "2.0.0"
#define GPPOISSON_VERSION_TIME "201908261420"
#define GPPOISSON_VERSION_TYPE "testing"
#define GPPOISSON_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPPOISSON_DISTRIBUTION "geopsypack-3.2.2"
#define GPPOISSON_GIT_COMMIT "648e41e55fc47b4054f0b577df870d14b53305b9"
#endif // GPPOISSON_VERSION
ENDVERSION
echo "Configure gppoisson"
cd "gppoisson"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gppoisson -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpprofile/src/gpprofileVersion.h
#ifndef GPPROFILE_VERSION
#define GPPROFILE_VERSION "1.1.0"
#define GPPROFILE_VERSION_TIME "201911191229"
#define GPPROFILE_VERSION_TYPE "testing"
#define GPPROFILE_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPPROFILE_DISTRIBUTION "geopsypack-3.2.2"
#define GPPROFILE_GIT_COMMIT "6911c19d80ce34df7c16d208c883e21f18ae237f"
#endif // GPPROFILE_VERSION
ENDVERSION
echo "Configure gpprofile"
cd "gpprofile"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpprofile -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpdc/src/gpdcVersion.h
#ifndef GPDC_VERSION
#define GPDC_VERSION "1.0.1"
#define GPDC_VERSION_TIME "201911191229"
#define GPDC_VERSION_TYPE "testing"
#define GPDC_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPDC_DISTRIBUTION "geopsypack-3.2.2"
#define GPDC_GIT_COMMIT "1d5e139d13b33c539b6aa8938d3694b354e77e99"
#endif // GPDC_VERSION
ENDVERSION
echo "Configure gpdc"
cd "gpdc"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpdc -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gplivemodel/src/gplivemodelVersion.h
#ifndef GPLIVEMODEL_VERSION
#define GPLIVEMODEL_VERSION "1.0.1"
#define GPLIVEMODEL_VERSION_TIME "201910010814"
#define GPLIVEMODEL_VERSION_TYPE "testing"
#define GPLIVEMODEL_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPLIVEMODEL_DISTRIBUTION "geopsypack-3.2.2"
#define GPLIVEMODEL_GIT_COMMIT "248ca913e867bff90475815da45b279e6623a163"
#endif // GPLIVEMODEL_VERSION
ENDVERSION
echo "Configure gplivemodel"
cd "gplivemodel"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gplivemodel -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpec8/src/gpec8Version.h
#ifndef GPEC8_VERSION
#define GPEC8_VERSION "1.0.0"
#define GPEC8_VERSION_TIME "201908261420"
#define GPEC8_VERSION_TYPE "testing"
#define GPEC8_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPEC8_DISTRIBUTION "geopsypack-3.2.2"
#define GPEC8_GIT_COMMIT "9f675af3ac2942e94c1c9dd5311a58058c2b759c"
#endif // GPEC8_VERSION
ENDVERSION
echo "Configure gpec8"
cd "gpec8"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpec8 -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpdcreport/src/gpdcreportVersion.h
#ifndef GPDCREPORT_VERSION
#define GPDCREPORT_VERSION "1.0.2"
#define GPDCREPORT_VERSION_TIME "201911191229"
#define GPDCREPORT_VERSION_TYPE "testing"
#define GPDCREPORT_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPDCREPORT_DISTRIBUTION "geopsypack-3.2.2"
#define GPDCREPORT_GIT_COMMIT "567f1a77e8dd712b4e8a906594c6313b2eb3686f"
#endif // GPDCREPORT_VERSION
ENDVERSION
echo "Configure gpdcreport"
cd "gpdcreport"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpdcreport -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gptarget/src/gptargetVersion.h
#ifndef GPTARGET_VERSION
#define GPTARGET_VERSION "1.0.1"
#define GPTARGET_VERSION_TIME "201909191926"
#define GPTARGET_VERSION_TYPE "testing"
#define GPTARGET_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPTARGET_DISTRIBUTION "geopsypack-3.2.2"
#define GPTARGET_GIT_COMMIT "9d54300b1b3b940462961415f0602d03315fb7db"
#endif // GPTARGET_VERSION
ENDVERSION
echo "Configure gptarget"
cd "gptarget"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gptarget -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpviewdcreport/src/gpviewdcreportVersion.h
#ifndef GPVIEWDCREPORT_VERSION
#define GPVIEWDCREPORT_VERSION "1.0.0"
#define GPVIEWDCREPORT_VERSION_TIME "201908261420"
#define GPVIEWDCREPORT_VERSION_TYPE "testing"
#define GPVIEWDCREPORT_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPVIEWDCREPORT_DISTRIBUTION "geopsypack-3.2.2"
#define GPVIEWDCREPORT_GIT_COMMIT "5b2675ee10ebb42660c9df41c391f8e30bf2d266"
#endif // GPVIEWDCREPORT_VERSION
ENDVERSION
echo "Configure gpviewdcreport"
cd "gpviewdcreport"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpviewdcreport -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpdcmisfit/src/gpdcmisfitVersion.h
#ifndef GPDCMISFIT_VERSION
#define GPDCMISFIT_VERSION "1.0.0"
#define GPDCMISFIT_VERSION_TIME "201908261420"
#define GPDCMISFIT_VERSION_TYPE "testing"
#define GPDCMISFIT_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPDCMISFIT_DISTRIBUTION "geopsypack-3.2.2"
#define GPDCMISFIT_GIT_COMMIT "8e4fcbb904e79bd0f6c7b3d982c99dc5a5b80019"
#endif // GPDCMISFIT_VERSION
ENDVERSION
echo "Configure gpdcmisfit"
cd "gpdcmisfit"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpdcmisfit -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpell/src/gpellVersion.h
#ifndef GPELL_VERSION
#define GPELL_VERSION "1.0.0"
#define GPELL_VERSION_TIME "201908261420"
#define GPELL_VERSION_TYPE "testing"
#define GPELL_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPELL_DISTRIBUTION "geopsypack-3.2.2"
#define GPELL_GIT_COMMIT "e309525f757f664437dc11f71631d25593a5ac48"
#endif // GPELL_VERSION
ENDVERSION
echo "Configure gpell"
cd "gpell"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpell -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpgroup2phase/src/gpgroup2phaseVersion.h
#ifndef GPGROUP2PHASE_VERSION
#define GPGROUP2PHASE_VERSION "1.0.0"
#define GPGROUP2PHASE_VERSION_TIME "201908261420"
#define GPGROUP2PHASE_VERSION_TYPE "testing"
#define GPGROUP2PHASE_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPGROUP2PHASE_DISTRIBUTION "geopsypack-3.2.2"
#define GPGROUP2PHASE_GIT_COMMIT "4a0457fa53a765b527caba7ed45a67f2a249fcc8"
#endif // GPGROUP2PHASE_VERSION
ENDVERSION
echo "Configure gpgroup2phase"
cd "gpgroup2phase"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpgroup2phase -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpmodel2param/src/gpmodel2paramVersion.h
#ifndef GPMODEL2PARAM_VERSION
#define GPMODEL2PARAM_VERSION "1.0.0"
#define GPMODEL2PARAM_VERSION_TIME "201908261420"
#define GPMODEL2PARAM_VERSION_TYPE "testing"
#define GPMODEL2PARAM_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPMODEL2PARAM_DISTRIBUTION "geopsypack-3.2.2"
#define GPMODEL2PARAM_GIT_COMMIT "b2dca3d381b45cd0c962934e98cdb74676b2b0e7"
#endif // GPMODEL2PARAM_VERSION
ENDVERSION
echo "Configure gpmodel2param"
cd "gpmodel2param"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpmodel2param -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpparam2model/src/gpparam2modelVersion.h
#ifndef GPPARAM2MODEL_VERSION
#define GPPARAM2MODEL_VERSION "1.0.0"
#define GPPARAM2MODEL_VERSION_TIME "201908261420"
#define GPPARAM2MODEL_VERSION_TYPE "testing"
#define GPPARAM2MODEL_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPPARAM2MODEL_DISTRIBUTION "geopsypack-3.2.2"
#define GPPARAM2MODEL_GIT_COMMIT "f86d71db45a46af401049b056de2fd2bce745106"
#endif // GPPARAM2MODEL_VERSION
ENDVERSION
echo "Configure gpparam2model"
cd "gpparam2model"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpparam2model -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpdepths/src/gpdepthsVersion.h
#ifndef GPDEPTHS_VERSION
#define GPDEPTHS_VERSION "1.0.0"
#define GPDEPTHS_VERSION_TIME "201908261420"
#define GPDEPTHS_VERSION_TYPE "testing"
#define GPDEPTHS_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPDEPTHS_DISTRIBUTION "geopsypack-3.2.2"
#define GPDEPTHS_GIT_COMMIT "3ccb41f1159990cd7f9814a51bb0819d8b3733c5"
#endif // GPDEPTHS_VERSION
ENDVERSION
echo "Configure gpdepths"
cd "gpdepths"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpdepths -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpsort/src/gpsortVersion.h
#ifndef GPSORT_VERSION
#define GPSORT_VERSION "1.0.0"
#define GPSORT_VERSION_TIME "201908261420"
#define GPSORT_VERSION_TYPE "testing"
#define GPSORT_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPSORT_DISTRIBUTION "geopsypack-3.2.2"
#define GPSORT_GIT_COMMIT "05cf8e3e3de91a11c1b9827cfd2b868aaa7ca744"
#endif // GPSORT_VERSION
ENDVERSION
echo "Configure gpsort"
cd "gpsort"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpsort -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpcurve/src/gpcurveVersion.h
#ifndef GPCURVE_VERSION
#define GPCURVE_VERSION "1.0.0"
#define GPCURVE_VERSION_TIME "201908261420"
#define GPCURVE_VERSION_TYPE "testing"
#define GPCURVE_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPCURVE_DISTRIBUTION "geopsypack-3.2.2"
#define GPCURVE_GIT_COMMIT "c4345a52e9d1233101fdf6691208346fce7ec878"
#endif // GPCURVE_VERSION
ENDVERSION
echo "Configure gpcurve"
cd "gpcurve"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpcurve -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gprandom/src/gprandomVersion.h
#ifndef GPRANDOM_VERSION
#define GPRANDOM_VERSION "1.0.0"
#define GPRANDOM_VERSION_TIME "201908261420"
#define GPRANDOM_VERSION_TYPE "testing"
#define GPRANDOM_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPRANDOM_DISTRIBUTION "geopsypack-3.2.2"
#define GPRANDOM_GIT_COMMIT "8344eb5303bb7b7fb85e846e67ec0a0c61424058"
#endif // GPRANDOM_VERSION
ENDVERSION
echo "Configure gprandom"
cd "gprandom"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gprandom -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpspac/src/gpspacVersion.h
#ifndef GPSPAC_VERSION
#define GPSPAC_VERSION "1.0.0"
#define GPSPAC_VERSION_TIME "201908261420"
#define GPSPAC_VERSION_TYPE "testing"
#define GPSPAC_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPSPAC_DISTRIBUTION "geopsypack-3.2.2"
#define GPSPAC_GIT_COMMIT "48f7e490e4d6b43bb9ed808b4ecb4c74c6552b9f"
#endif // GPSPAC_VERSION
ENDVERSION
echo "Configure gpspac"
cd "gpspac"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpspac -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gprefra/src/gprefraVersion.h
#ifndef GPREFRA_VERSION
#define GPREFRA_VERSION "1.0.0"
#define GPREFRA_VERSION_TIME "201908261420"
#define GPREFRA_VERSION_TYPE "testing"
#define GPREFRA_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPREFRA_DISTRIBUTION "geopsypack-3.2.2"
#define GPREFRA_GIT_COMMIT "ae149cee6029d8d33929280d904233d91ae091e3"
#endif // GPREFRA_VERSION
ENDVERSION
echo "Configure gprefra"
cd "gprefra"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gprefra -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpsignal/src/gpsignalVersion.h
#ifndef GPSIGNAL_VERSION
#define GPSIGNAL_VERSION "2.0.0"
#define GPSIGNAL_VERSION_TIME "201908261420"
#define GPSIGNAL_VERSION_TYPE "testing"
#define GPSIGNAL_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPSIGNAL_DISTRIBUTION "geopsypack-3.2.2"
#define GPSIGNAL_GIT_COMMIT "d7425fde35ed10ea8d015229896b2003defc23e7"
#endif // GPSIGNAL_VERSION
ENDVERSION
echo "Configure gpsignal"
cd "gpsignal"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpsignal -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gphistogram/src/gphistogramVersion.h
#ifndef GPHISTOGRAM_VERSION
#define GPHISTOGRAM_VERSION "1.1.0"
#define GPHISTOGRAM_VERSION_TIME "201909230925"
#define GPHISTOGRAM_VERSION_TYPE "testing"
#define GPHISTOGRAM_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPHISTOGRAM_DISTRIBUTION "geopsypack-3.2.2"
#define GPHISTOGRAM_GIT_COMMIT "6571061c232c2bce59ed2a5f5407ce9bc8d2f0dc"
#endif // GPHISTOGRAM_VERSION
ENDVERSION
echo "Configure gphistogram"
cd "gphistogram"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gphistogram -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpviewmax/src/gpviewmaxVersion.h
#ifndef GPVIEWMAX_VERSION
#define GPVIEWMAX_VERSION "1.0.1"
#define GPVIEWMAX_VERSION_TIME "201909191926"
#define GPVIEWMAX_VERSION_TYPE "testing"
#define GPVIEWMAX_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)"
#define GPVIEWMAX_DISTRIBUTION "geopsypack-3.2.2"
#define GPVIEWMAX_GIT_COMMIT "8ff2cc0b3da014d77ebb64e81de9a72c26297671"
#endif // GPVIEWMAX_VERSION
ENDVERSION
echo "Configure gpviewmax"
cd "gpviewmax"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpviewmax -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpdistance/src/gpdistanceVersion.h
#ifndef GPDISTANCE_VERSION
#define GPDISTANCE_VERSION "1.0.0"
#define GPDISTANCE_VERSION_TIME "201908261420"
#define GPDISTANCE_VERSION_TYPE "testing"
#define GPDISTANCE_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPDISTANCE_DISTRIBUTION "geopsypack-3.2.2"
#define GPDISTANCE_GIT_COMMIT "d65685c50363f0bc5597c9b4a74b92af03a796b4"
#endif // GPDISTANCE_VERSION
ENDVERSION
echo "Configure gpdistance"
cd "gpdistance"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpdistance -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gptime/src/gptimeVersion.h
#ifndef GPTIME_VERSION
#define GPTIME_VERSION "1.0.0"
#define GPTIME_VERSION_TIME "201908261420"
#define GPTIME_VERSION_TYPE "testing"
#define GPTIME_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPTIME_DISTRIBUTION "geopsypack-3.2.2"
#define GPTIME_GIT_COMMIT "9ad3a55968e81eb121fdbfd2e620e325f83eeabf"
#endif // GPTIME_VERSION
ENDVERSION
echo "Configure gptime"
cd "gptime"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gptime -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpcoord/src/gpcoordVersion.h
#ifndef GPCOORD_VERSION
#define GPCOORD_VERSION "1.0.0"
#define GPCOORD_VERSION_TIME "201908261420"
#define GPCOORD_VERSION_TYPE "testing"
#define GPCOORD_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPCOORD_DISTRIBUTION "geopsypack-3.2.2"
#define GPCOORD_GIT_COMMIT "092eab84f0b390fc05cb12c454305b22091513c5"
#endif // GPCOORD_VERSION
ENDVERSION
echo "Configure gpcoord"
cd "gpcoord"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpcoord -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpreplace/src/gpreplaceVersion.h
#ifndef GPREPLACE_VERSION
#define GPREPLACE_VERSION "1.0.0"
#define GPREPLACE_VERSION_TIME "201908261420"
#define GPREPLACE_VERSION_TYPE "testing"
#define GPREPLACE_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPREPLACE_DISTRIBUTION "geopsypack-3.2.2"
#define GPREPLACE_GIT_COMMIT "3dae13b7bb584e0412b6a429c0518725e08201b0"
#endif // GPREPLACE_VERSION
ENDVERSION
echo "Configure gpreplace"
cd "gpreplace"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpreplace -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpsh/src/gpshVersion.h
#ifndef GPSH_VERSION
#define GPSH_VERSION "1.0.0"
#define GPSH_VERSION_TIME "201908261420"
#define GPSH_VERSION_TYPE "testing"
#define GPSH_AUTHORS "Marc Wathelet\nMarc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPSH_DISTRIBUTION "geopsypack-3.2.2"
#define GPSH_GIT_COMMIT "5164db333c91e413a80ecf6ee14ae2660f3c3123"
#endif // GPSH_VERSION
ENDVERSION
echo "Configure gpsh"
cd "gpsh"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpsh -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpmt/src/gpmtVersion.h
#ifndef GPMT_VERSION
#define GPMT_VERSION "1.0.0"
#define GPMT_VERSION_TIME "201908261420"
#define GPMT_VERSION_TYPE "testing"
#define GPMT_AUTHORS "Marc Wathelet (LGIT, Grenoble, France)"
#define GPMT_DISTRIBUTION "geopsypack-3.2.2"
#define GPMT_GIT_COMMIT "4af181cae69d13963c0b94c0e004f2563c9ffd58"
#endif // GPMT_VERSION
ENDVERSION
echo "Configure gpmt"
cd "gpmt"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpmt -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpgridsearch/src/gpgridsearchVersion.h
#ifndef GPGRIDSEARCH_VERSION
#define GPGRIDSEARCH_VERSION "1.0.0"
#define GPGRIDSEARCH_VERSION_TIME "201908261420"
#define GPGRIDSEARCH_VERSION_TYPE "testing"
#define GPGRIDSEARCH_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)"
#define GPGRIDSEARCH_DISTRIBUTION "geopsypack-3.2.2"
#define GPGRIDSEARCH_GIT_COMMIT "5fa927a73f16405b366a63c6ae742a9b070eeda9"
#endif // GPGRIDSEARCH_VERSION
ENDVERSION
echo "Configure gpgridsearch"
cd "gpgridsearch"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpgridsearch -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpfksimulator/src/gpfksimulatorVersion.h
#ifndef GPFKSIMULATOR_VERSION
#define GPFKSIMULATOR_VERSION "1.0.2"
#define GPFKSIMULATOR_VERSION_TIME "201910010814"
#define GPFKSIMULATOR_VERSION_TYPE "testing"
#define GPFKSIMULATOR_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)"
#define GPFKSIMULATOR_DISTRIBUTION "geopsypack-3.2.2"
#define GPFKSIMULATOR_GIT_COMMIT "a6a63ffad6d26486ab42bf60e54c8d8007f9e222"
#endif // GPFKSIMULATOR_VERSION
ENDVERSION
echo "Configure gpfksimulator"
cd "gpfksimulator"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpfksimulator -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > gpmaplayer/src/gpmaplayerVersion.h
#ifndef GPMAPLAYER_VERSION
#define GPMAPLAYER_VERSION "1.0.0"
#define GPMAPLAYER_VERSION_TIME "201908261420"
#define GPMAPLAYER_VERSION_TYPE "testing"
#define GPMAPLAYER_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)"
#define GPMAPLAYER_DISTRIBUTION "geopsypack-3.2.2"
#define GPMAPLAYER_GIT_COMMIT "d11a57d66fac82d726bc719845dbf43be3ff6068"
#endif // GPMAPLAYER_VERSION
ENDVERSION
echo "Configure gpmaplayer"
cd "gpmaplayer"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir gpmaplayer -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > dinvermatlab/src/dinvermatlabVersion.h
#ifndef DINVERMATLAB_VERSION
#define DINVERMATLAB_VERSION "1.0.1"
#define DINVERMATLAB_VERSION_TIME "201910010814"
#define DINVERMATLAB_VERSION_TYPE "testing"
#define DINVERMATLAB_AUTHORS "Marc Wathelet\nMarc Wathelet (LGIT, Grenoble, France)"
#define DINVERMATLAB_DISTRIBUTION "geopsypack-3.2.2"
#define DINVERMATLAB_GIT_COMMIT "27f6fae421891702fcda94b646104142ba5b6f64"
#endif // DINVERMATLAB_VERSION
ENDVERSION
echo "Configure dinvermatlab"
cd "dinvermatlab"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir dinvermatlab -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
cat <<ENDVERSION > matfiles/src/matfilesVersion.h
#ifndef MATFILES_VERSION
#define MATFILES_VERSION "1.0.1"
#define MATFILES_VERSION_TIME "201910010814"
#define MATFILES_VERSION_TYPE "testing"
#define MATFILES_AUTHORS "Marc Wathelet (ISTerre, Grenoble, France)\nMarc Wathelet (LGIT, Grenoble, France)"
#define MATFILES_DISTRIBUTION "geopsypack-3.2.2"
#define MATFILES_GIT_COMMIT "75cce054163d5922266c3fc3c965e2939e3652df"
#endif // MATFILES_VERSION
ENDVERSION
echo "Configure matfiles"
cd "matfiles"
echo "$SHELL configure-testing -accept-license -sourcedir $SOURCE_DIR -builddir $BUILD_DIR -buildsubdir matfiles -skip-qt-check -dest-prefix $SOURCE_DIR $COMMANDLINE 2>$TEMP_FILE 1>/dev/null" > tmp
if ! $SHELL tmp; then
  cat $TEMP_FILE
  rm $TEMP_FILE tmp
  exit 2
else
  cat $TEMP_FILE
fi
rm -f tmp $TEMP_FILE
cd ..
# Generate make file
if [ "$BUILD_DIR" = "$SOURCE_DIR" ]; then
  qmake geopsypack.pro
else
  cd $BUILD_DIR
  qmake $SOURCE_DIR/geopsypack.pro
  cd $SOURCE_DIR
fi
###############################################################
# Final user message
###############################################################
echo
if [ "$PLATFORM" = "MINGW" ]; then
  CONFIGURE_COMMAND="sh configure"
else
  CONFIGURE_COMMAND="./configure"
fi
echo "  geopsypack is now configured for building."
echo
echo "  To proceed, run (if you have 8 cores)"
echo
if [ "${BUILD_DIR}" != "${PROJECT_DIR}" ]; then
  echo "    $ make -j 8 -C ${BUILD_DIR}"
else
  echo "    $ make -j 8"
fi
echo
echo "  Once everything is built, you must run either"
echo
echo "    $ su -c "make install", if root privileges are needed;"
echo "  or"
echo "    $ make install, if user permissions are sufficient."
echo
echo "  The current configuration options are stored in 'configure.cache'."
echo "  To change the configuration, run '$CONFIGURE_COMMAND [options]'."
echo
